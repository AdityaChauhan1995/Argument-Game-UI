{"ast":null,"code":"import axios from 'axios';\nvar GAME_MAP_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/getGameMap\");\nvar GAME_LIST_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/getGameList\");\nvar VALIDATE_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/validate\");\nvar INITIAL_MAP_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/getInitialMap\");\nvar SAVE_MAP_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/saveMap\");\nvar HINT_MOVE_URL = \"\".concat(process.env.REACT_APP_API_BASE, \"/hintMove\"); // const LOGOUT_API_URL = (sessionId) => `${process.env.REACT_APP_API_BASE}/user/logout?sessionId=${sessionId}`;\n// actions\n\nvar getMap = function getMap(nodes, edges) {\n  return axios.post(GAME_MAP_URL, {\n    nodes: nodes,\n    edges: edges\n  });\n};\n\nvar getList = function getList(gameType, initialNode, gameTreeMap, gameStart) {\n  return axios.post(GAME_LIST_URL, {\n    gameType: gameType,\n    initialNode: initialNode,\n    gameTreeMap: gameTreeMap,\n    gameStart: gameStart\n  });\n};\n\nvar validate = function validate(initialNode, gameTreeList, nodes, edges, lastAddedNode, proponentWinCount, opponentWinCount, gameStart) {\n  return axios.post(VALIDATE_URL, {\n    initialNode: initialNode,\n    gameTreeList: gameTreeList,\n    nodes: nodes,\n    edges: edges,\n    lastAddedNode: lastAddedNode,\n    proponentWinCount: proponentWinCount,\n    opponentWinCount: opponentWinCount,\n    gameStart: gameStart\n  });\n};\n\nvar getInitial = function getInitial() {\n  return axios.get(INITIAL_MAP_URL);\n};\n\nvar save = function save(nodes, edges) {\n  return axios.post(SAVE_MAP_URL, {\n    nodes: nodes,\n    edges: edges\n  });\n};\n\nvar hint = function hint(initialNode, gameTreeList, nodes, edges, gameStart) {\n  return axios.post(HINT_MOVE_URL, {\n    initialNode: initialNode,\n    gameTreeList: gameTreeList,\n    nodes: nodes,\n    edges: edges,\n    gameStart: gameStart\n  });\n};\n\nexport var getGameMap = function getGameMap(nodes, edges) {\n  return function (dispatch) {\n    dispatch({\n      type: 'GAME_MAP',\n      payload: getMap(nodes, edges)\n    });\n  };\n};\nexport var getGameList = function getGameList(gameType, initialNode, gameTreeMap, gameStart) {\n  return function (dispatch) {\n    dispatch({\n      type: 'GAME_LIST',\n      payload: getList(gameType, initialNode, gameTreeMap, gameStart)\n    });\n  };\n};\nexport var validateMove = function validateMove(initialNode, gameTreeList, nodes, edges, lastAddedNode, proponentWinCount, opponentWinCount, gameStart) {\n  return function (dispatch) {\n    dispatch({\n      type: 'VALIDATE_MOVE_RESULT',\n      payload: validate(initialNode, gameTreeList, nodes, edges, lastAddedNode, proponentWinCount, opponentWinCount, gameStart)\n    });\n  };\n};\nexport var getInitialMap = function getInitialMap() {\n  return function (dispatch) {\n    dispatch({\n      type: 'INITIAL_MAP',\n      payload: getInitial()\n    });\n  };\n};\nexport var saveMap = function saveMap(nodes, edges) {\n  return function (dispatch) {\n    dispatch({\n      type: 'SAVE_MAP',\n      payload: save(nodes, edges)\n    });\n  };\n};\nexport var hintMove = function hintMove(initialNode, gameTreeList, nodes, edges, gameStart) {\n  return function (dispatch) {\n    dispatch({\n      type: 'HINT_MOVE',\n      payload: hint(initialNode, gameTreeList, nodes, edges, gameStart)\n    });\n  };\n};","map":{"version":3,"names":["axios","GAME_MAP_URL","process","env","REACT_APP_API_BASE","GAME_LIST_URL","VALIDATE_URL","INITIAL_MAP_URL","SAVE_MAP_URL","HINT_MOVE_URL","getMap","nodes","edges","post","getList","gameType","initialNode","gameTreeMap","gameStart","validate","gameTreeList","lastAddedNode","proponentWinCount","opponentWinCount","getInitial","get","save","hint","getGameMap","dispatch","type","payload","getGameList","validateMove","getInitialMap","saveMap","hintMove"],"sources":["C:/Users/adity/Desktop/Argument Games UI/src/actions/UserActions.js"],"sourcesContent":["import axios from 'axios';\nconst GAME_MAP_URL = `${process.env.REACT_APP_API_BASE}/getGameMap`;\nconst GAME_LIST_URL = `${process.env.REACT_APP_API_BASE}/getGameList`;\nconst VALIDATE_URL = `${process.env.REACT_APP_API_BASE}/validate`;\nconst INITIAL_MAP_URL = `${process.env.REACT_APP_API_BASE}/getInitialMap`;\nconst SAVE_MAP_URL = `${process.env.REACT_APP_API_BASE}/saveMap`;\nconst HINT_MOVE_URL = `${process.env.REACT_APP_API_BASE}/hintMove`;\n// const LOGOUT_API_URL = (sessionId) => `${process.env.REACT_APP_API_BASE}/user/logout?sessionId=${sessionId}`;\n\n// actions\nvar getMap = (nodes,edges) => {\n\treturn axios.post(GAME_MAP_URL, {nodes,edges});\n}\n\nvar getList = (gameType,initialNode,gameTreeMap,gameStart) => {\n\treturn axios.post(GAME_LIST_URL, {gameType,initialNode,gameTreeMap,gameStart});\n}\n\nvar validate = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\n\treturn axios.post(VALIDATE_URL, {initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart});\n}\n\nvar getInitial = () => {\n\treturn axios.get(INITIAL_MAP_URL);\n}\n\nvar save = (nodes,edges) => {\n\treturn axios.post(SAVE_MAP_URL, {nodes,edges});\n}\n\nvar hint = (initialNode,gameTreeList,nodes, edges,gameStart) => {\n\treturn axios.post(HINT_MOVE_URL, {initialNode,gameTreeList,nodes, edges,gameStart});\n}\n\nexport const getGameMap = (nodes,edges) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'GAME_MAP',\n\t\t\tpayload: getMap(nodes,edges)\n\t\t})\n\n\t}\n}\n\nexport const getGameList = (gameType,initialNode,gameTreeMap,gameStart) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'GAME_LIST',\n\t\t\tpayload: getList(gameType,initialNode,gameTreeMap,gameStart)\n\t\t})\n\n\t}\n}\n\nexport const validateMove = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'VALIDATE_MOVE_RESULT',\n\t\t\tpayload: validate(initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart)\n\t\t})\n\n\t}\n}\n\nexport const getInitialMap = () => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'INITIAL_MAP',\n\t\t\tpayload: getInitial()\n\t\t})\n\n\t}\n}\n\nexport const saveMap = (nodes,edges) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'SAVE_MAP',\n\t\t\tpayload: save(nodes,edges)\n\t\t})\n\n\t}\n}\n\nexport const hintMove = (initialNode,gameTreeList,nodes, edges,gameStart) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: 'HINT_MOVE',\n\t\t\tpayload: hint(initialNode,gameTreeList,nodes, edges, gameStart)\n\t\t})\n\n\t}\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}