{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectDestructuringEmpty from \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Argument Games UI\\\\src\\\\pages\\\\login-screen.jsx\";\n\nimport React, { useState, Fragment, Component } from 'react';\nimport { Input, Dropdown, Message, Dimmer, Header, Icon, Checkbox } from \"semantic-ui-react\";\nimport { useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, useReactFlow } from 'react-flow-renderer'; // import defaultNodes from './nodes.js';\n\nimport defaultGameNodes from './gameNode.js'; // import defaultEdges from './edges.js';\n\nimport defaultGameEdges from './gameEdge.js';\nimport './button.css'; //redux\n\nimport { connect } from 'react-redux';\nimport { getGameMap, getGameList, validateMove, getInitialMap, saveMap, hintMove } from '../actions/UserActions';\nimport ErrorMessage from \"../components/show-error\";\nvar edgeOptions = {\n  animated: false,\n  style: {\n    stroke: 'black'\n  }\n};\nvar connectionLineStyle = {\n  stroke: 'black'\n};\nvar nodeId = 0;\n\nvar Flow = function Flow(_ref) {\n  var defaultNodes = _ref.defaultNodes,\n      defaultEdges = _ref.defaultEdges,\n      addMapNodeDisabled = _ref.addMapNodeDisabled;\n  var reactFlowInstance = useReactFlow();\n  var onClick = useCallback(function () {\n    var count = reactFlowInstance.getNodes().length;\n    var id = \"\".concat(++count);\n    var newNode = {\n      id: id,\n      position: {\n        // x: Math.random() * 500,\n        // y: 0.25 * 500,\n        x: Math.floor(Math.random() * (500 - 300 + 1)) + 300,\n        y: Math.floor(Math.random() * (250 - 150 + 1)) + 150\n      },\n      data: {\n        label: \"Node \".concat(id)\n      }\n    };\n    reactFlowInstance.addNodes(newNode);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"btn-add\",\n    disabled: addMapNodeDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Add Node\"), /*#__PURE__*/React.createElement(ReactFlow, {\n    defaultNodes: defaultNodes,\n    defaultEdges: defaultEdges,\n    defaultEdgeOptions: edgeOptions,\n    fitView: true,\n    style: {\n      backgroundColor: '#D3D2E5'\n    },\n    connectionLineStyle: connectionLineStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar Save = function Save(_ref2) {\n  var saveMap = _ref2.saveMap,\n      saveDisabled = _ref2.saveDisabled;\n  var reactFlowInstance = useReactFlow();\n  var onClick = useCallback(function () {\n    saveMap(reactFlowInstance.getNodes(), reactFlowInstance.getEdges());\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"btn-add2\",\n    disabled: saveDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }\n  }), \"Save\"));\n};\n\nvar ResetMap = function ResetMap(_ref3) {\n  var defaultNodes = _ref3.defaultNodes,\n      defaultEdges = _ref3.defaultEdges,\n      resetMapDisabled = _ref3.resetMapDisabled,\n      resetMap = _ref3.resetMap;\n  var reactFlowInstance = useReactFlow();\n  var onClick = useCallback(function () {\n    reactFlowInstance.setNodes(defaultNodes);\n    reactFlowInstance.setEdges(defaultEdges);\n    nodeId = 0;\n    resetMap();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"btn-add4\",\n    disabled: resetMapDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"undo\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }), \"Reset\"));\n};\n\nvar Remove = function Remove(_ref4) {\n  var removeNode = _ref4.removeNode,\n      removeDisabled = _ref4.removeDisabled;\n  var reactFlowInstance = useReactFlow();\n\n  var onClick = function onClick(removeNode) {\n    return function () {\n      console.log(typeof removeNode, 'removeNode', removeNode);\n      var tempNodes = reactFlowInstance.getNodes().filter(function (x) {\n        return x.id !== removeNode;\n      });\n      var tempEdges = reactFlowInstance.getEdges().filter(function (x) {\n        return x.source !== removeNode && x.target !== removeNode;\n      });\n      reactFlowInstance.setNodes(tempNodes);\n      reactFlowInstance.setEdges(tempEdges); // nodeId = 2;\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick(removeNode),\n    className: \"btn-add8\",\n    disabled: removeDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }), \"Remove\"));\n};\n\nvar PlayGame = function PlayGame(_ref5) {\n  var playGameFunction = _ref5.playGameFunction,\n      playGameDisabled = _ref5.playGameDisabled;\n  var reactFlowInstance = useReactFlow();\n  var onClick = useCallback(function () {\n    playGameFunction(reactFlowInstance.getNodes(), reactFlowInstance.getEdges()); // console.log('getNodes',JSON.stringify(reactFlowInstance.getNodes()),'getEdges',JSON.stringify(reactFlowInstance.getEdges()))\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"btn-add3\",\n    disabled: playGameDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"play\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }), \"Game\"));\n};\n\nvar PlayFlow = function PlayFlow(_ref6) {\n  _objectDestructuringEmpty(_ref6);\n\n  var reactFlowInstance = useReactFlow();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    defaultNodes: defaultGameNodes,\n    defaultEdges: defaultGameEdges,\n    defaultEdgeOptions: edgeOptions,\n    fitView: true,\n    style: {\n      backgroundColor: '#f4b1b1'\n    },\n    connectionLineStyle: connectionLineStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar AddNodeGame = function AddNodeGame(_ref7) {\n  var value = _ref7.value,\n      addbutton = _ref7.addbutton,\n      addGameNodeDisabled = _ref7.addGameNodeDisabled;\n  var reactFlowInstance = useReactFlow();\n\n  var onClick = function onClick(value) {\n    return function () {\n      var tempNodes = reactFlowInstance.getNodes().filter(function (x) {\n        return x.id.split('(')[0] == value;\n      });\n      var id = value;\n\n      if (tempNodes.length != 0) {\n        id = value + '(' + (tempNodes.length + 1) + ')';\n      }\n\n      console.log('typeof', typeof id, 'id', id);\n      var gameNode = {\n        id: id,\n        position: {\n          // x: Math.random() * 500,\n          // y: 0.25 * 500,\n          x: Math.floor(Math.random() * (500 - 300 + 1)) + 300,\n          y: Math.floor(Math.random() * (250 - 150 + 1)) + 150\n        },\n        data: {\n          label: \"Node \".concat(id)\n        }\n      };\n      console.log('gameNode', gameNode);\n      reactFlowInstance.addNodes(gameNode);\n      console.log(reactFlowInstance.getEdges());\n      addbutton(gameNode);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick(value),\n    className: \"btn-add5\",\n    disabled: addGameNodeDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar ResetGame = function ResetGame(_ref8) {\n  var resetGame = _ref8.resetGame,\n      resetGameDisabled = _ref8.resetGameDisabled,\n      resetMapClicked = _ref8.resetMapClicked;\n  var reactFlowInstance = useReactFlow();\n  var onClick = useCallback(function () {\n    reactFlowInstance.setNodes(defaultGameNodes);\n    reactFlowInstance.setEdges(defaultGameEdges);\n    resetGame();\n  }, []);\n\n  if (resetMapClicked) {\n    reactFlowInstance.setNodes(defaultGameNodes);\n    reactFlowInstance.setEdges(defaultGameEdges);\n    resetGame();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick,\n    className: \"btn-add6\",\n    disabled: resetGameDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"undo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar Validate = function Validate(_ref9) {\n  var initialNode = _ref9.initialNode,\n      gameTreeList = _ref9.gameTreeList,\n      validateMove = _ref9.validateMove,\n      validateMoveClicked = _ref9.validateMoveClicked,\n      validateMoveResult = _ref9.validateMoveResult,\n      validationFinished = _ref9.validationFinished,\n      proponentWinCount = _ref9.proponentWinCount,\n      opponentWinCount = _ref9.opponentWinCount,\n      lastAddedNode = _ref9.lastAddedNode,\n      validateDisabled = _ref9.validateDisabled,\n      gameStart = _ref9.gameStart;\n  var reactFlowInstance = useReactFlow();\n  var tempProponentWinCount = -1,\n      tempOpponentWinCount = -1; // console.log('initialNode',initialNode,'gameTreeList',gameTreeList,'validateMove',validateMove);\n\n  var onClick = function onClick(initialNode, gameTreeList, validateMove, lastAddedNode, proponentWinCount, opponentWinCount, gameStart) {\n    return function () {\n      console.log('2', initialNode, gameTreeList); // alert('Invalid Move');\n      // reactFlowInstance.addNodes({id: '2',data: { label: 'Node 2' }, position: { x: 250, y: 25 }});\n      // reactFlowInstance.addEdges({id: 'e1-2', source: '1', target: '2'});\n\n      validateMove(initialNode, gameTreeList, reactFlowInstance.getNodes(), reactFlowInstance.getEdges(), lastAddedNode.id, proponentWinCount, opponentWinCount, gameStart);\n    };\n  };\n\n  console.log('validateMoveClicked', validateMoveClicked);\n  console.log('validateMoveResult', validateMoveResult);\n\n  if (validateMoveClicked) {\n    console.log('validateMoveResult', validateMoveResult);\n\n    if (validateMoveResult.result) {\n      if (validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over') {\n        if (validateMoveResult.message != null) {\n          tempProponentWinCount = validateMoveResult.proponentWinCount;\n          tempOpponentWinCount = validateMoveResult.opponentWinCount; // alert(validateMoveResult.message)\n        }\n      } else if (validateMoveResult.win == 'Won') {\n        var id = validateMoveResult.node.id;\n        var gameNode = {\n          id: id,\n          position: {\n            // x: Math.random() * 500,\n            // y: 0.25 * 500,\n            x: Math.floor(Math.random() * (500 - 300 + 1)) + 300,\n            y: Math.floor(Math.random() * (250 - 150 + 1)) + 150\n          },\n          data: {\n            label: \"Node \".concat(id)\n          }\n        };\n        reactFlowInstance.addNodes(gameNode);\n        var edgePresent = false;\n        var tempEdges = reactFlowInstance.getEdges();\n\n        for (var i = 0; i < reactFlowInstance.getEdges().length; i++) {\n          if (validateMoveResult.edge.source == tempEdges[i].source && validateMoveResult.edge.target == tempEdges[i].target) {\n            edgePresent = true;\n          }\n        }\n\n        if (!edgePresent) {\n          reactFlowInstance.addEdges(validateMoveResult.edge);\n        }\n\n        if (validateMoveResult.message != null) {\n          tempProponentWinCount = validateMoveResult.proponentWinCount;\n          tempOpponentWinCount = validateMoveResult.opponentWinCount; // alert(validateMoveResult.message)\n        }\n      }\n    } else {\n      var tempNodes = reactFlowInstance.getNodes().filter(function (x) {\n        return x.id !== lastAddedNode.id;\n      });\n      var tempEdges = reactFlowInstance.getEdges().filter(function (x) {\n        return x.source !== lastAddedNode.id && x.target !== lastAddedNode.id;\n      });\n      reactFlowInstance.setNodes(tempNodes);\n      reactFlowInstance.setEdges(tempEdges); // alert(validateMoveResult.exceptionMessage)\n    }\n\n    validationFinished(tempProponentWinCount, tempOpponentWinCount, validateMoveResult);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick(initialNode, gameTreeList, validateMove, lastAddedNode, proponentWinCount, opponentWinCount, gameStart),\n    className: \"btn-add7\",\n    disabled: validateDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"check circle outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 6\n    }\n  }), \"Validate\"));\n};\n\nvar Hint = function Hint(_ref10) {\n  var hint = _ref10.hint,\n      initialNode = _ref10.initialNode,\n      gameTreeList = _ref10.gameTreeList,\n      hintDisabled = _ref10.hintDisabled,\n      gameStart = _ref10.gameStart;\n  var reactFlowInstance = useReactFlow();\n\n  var onClick = function onClick(hint, initialNode, gameTreeList, gameStart) {\n    return function () {\n      console.log('hint initialNode', initialNode);\n      hint(initialNode, gameTreeList, reactFlowInstance.getNodes(), reactFlowInstance.getEdges(), gameStart);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClick(hint, initialNode, gameTreeList, gameStart),\n    className: \"btn-add10\",\n    disabled: hintDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"idea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }), \"Hint\"));\n};\n\nvar LoginScreen = /*#__PURE__*/function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  function LoginScreen(props) {\n    var _this2;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this, props));\n\n    _this2.saveMap = function (nodes, edges) {\n      // const { email, password } = this.state;\n      // this.setState({ loading: true });\n      // const reactFlowInstance = useReactFlow();\n      var temp = JSON.stringify(nodes);\n      console.log('nodes', JSON.stringify(nodes), 'edges', JSON.stringify(edges), 'nodesParse', JSON.parse(temp)); // this.setState({reactFlowInstance:edges} , () => (\"this.state.reactFlowInstance\",console.log(this.state.reactFlowInstance)) );\n\n      console.log('gameType', _this2.state.gameType);\n\n      _this2.setState({\n        showDimmer: true\n      });\n\n      _this2.props.saveMap(JSON.stringify(nodes), JSON.stringify(edges));\n    };\n\n    _this2.playGameFunction = function (nodes, edges) {\n      _this2.setState({\n        initialNode: null,\n        addMapNodeDisabled: true,\n        removeDisabled: true,\n        playGameDisabled: true,\n        gameTypeDisabled: false,\n        resetGameDisabled: false,\n        removeNode: '',\n        showDimmer: true\n      });\n\n      console.log('nodes', nodes, 'edges', edges);\n\n      _this2.props.getGameMap(nodes, edges);\n    };\n\n    _this2.addbutton = function (gameNode) {\n      var _this2$state = _this2.state,\n          initialNode = _this2$state.initialNode,\n          gameTreeMap = _this2$state.gameTreeMap,\n          gameType = _this2$state.gameType,\n          gameStart = _this2$state.gameStart;\n\n      if (initialNode == null) {\n        if (gameStart == 'Proponent') {\n          _this2.setState({\n            initialNode: gameNode.id,\n            lastAddedNode: gameNode,\n            validateDisabled: false,\n            gameTypeDisabled: true,\n            addGameNodeDisabled: true,\n            hintDisabled: true,\n            showDimmer: true,\n            gameStartDisabled: true\n          });\n        } else {\n          _this2.setState({\n            initialNode: gameNode.id,\n            lastAddedNode: gameNode,\n            validateDisabled: true,\n            gameTypeDisabled: true,\n            addGameNodeDisabled: false,\n            hintDisabled: false,\n            showDimmer: true,\n            gameStartDisabled: true\n          });\n        }\n\n        _this2.props.getGameList(gameType, gameNode.id, gameTreeMap, gameStart);\n\n        console.log('initialNode', initialNode);\n      } else {\n        _this2.setState({\n          lastAddedNode: gameNode,\n          validateDisabled: false,\n          addGameNodeDisabled: true,\n          hintDisabled: true\n        });\n      }\n    };\n\n    _this2.validateMove = function (initialNode, gameTreeList, nodes, edges, lastAddedNode, proponentWinCount, opponentWinCount, gameStart) {\n      _this2.setState({\n        showDimmer: true\n      });\n\n      _this2.props.validateMove(initialNode, gameTreeList, nodes, edges, lastAddedNode, proponentWinCount, opponentWinCount, gameStart);\n\n      console.log('this.state.validateMoveClicked', _this2.state.validateMoveClicked);\n    };\n\n    _this2.validationFinished = function (tempProponentWinCount, tempOpponentWinCount, validateMoveResult) {\n      if (tempProponentWinCount !== -1 && tempOpponentWinCount !== -1) {\n        _this2.setState({\n          validateMoveClicked: false,\n          proponentWinCount: tempProponentWinCount,\n          opponentWinCount: tempOpponentWinCount\n        });\n      } else {\n        _this2.setState({\n          validateMoveClicked: false\n        });\n      }\n\n      if (validateMoveResult.message != null) {\n        _this2.setState({\n          resultMessage: validateMoveResult.message\n        });\n      }\n\n      _this2.setState({\n        validateDisabled: true,\n        hintDisabled: false,\n        addGameNodeDisabled: false,\n        resultDisabled: false\n      });\n\n      if (validateMoveResult.result) {\n        if (validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over') {\n          if (validateMoveResult.message != null) {\n            _this2.setState({\n              status: 'Show',\n              messageColor: 'blue',\n              message: validateMoveResult.message\n            });\n          }\n        } else if (validateMoveResult.win == 'Won') {\n          if (validateMoveResult.message != null) {\n            _this2.setState({\n              status: 'Show',\n              messageColor: 'blue',\n              message: validateMoveResult.message\n            });\n          }\n        }\n      } else {\n        _this2.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: validateMoveResult.exceptionMessage\n        });\n      }\n    };\n\n    _this2.resetGame = function () {\n      if (_this2.state.resetMapClicked) {\n        _this2.setState({\n          initialNode: null,\n          proponentWinCount: 0,\n          opponentWinCount: 0,\n          resultMessage: null,\n          resetMapClicked: false,\n          gameType: '',\n          gameNode: '',\n          gameTypeDisabled: true,\n          addGameNodeDisabled: true,\n          gameStart: 'Proponent',\n          isGameStartChecked: false,\n          gameStartDisabled: true\n        });\n      } else {\n        _this2.setState({\n          initialNode: null,\n          proponentWinCount: 0,\n          opponentWinCount: 0,\n          resultMessage: null,\n          resetMapClicked: false,\n          gameType: '',\n          gameNode: '',\n          gameTypeDisabled: false,\n          addGameNodeDisabled: true,\n          gameStart: 'Proponent',\n          isGameStartChecked: false,\n          gameStartDisabled: true\n        });\n      }\n    };\n\n    _this2.resetMap = function () {\n      _this2.setState({\n        initialNode: null,\n        proponentWinCount: 0,\n        opponentWinCount: 0,\n        resultMessage: null,\n        resetMapClicked: true,\n        addMapNodeDisabled: false,\n        removeDisabled: false,\n        saveDisabled: false,\n        resetMapDisabled: false,\n        playGameDisabled: false,\n        gameTypeDisabled: true,\n        addGameNodeDisabled: true,\n        validateDisabled: true,\n        resetGameDisabled: true,\n        hintDisabled: true,\n        resultDisabled: true,\n        gameType: '',\n        gameNode: '',\n        removeNode: '',\n        gameStart: 'Proponent',\n        isGameStartChecked: false,\n        gameStartDisabled: true\n      });\n    };\n\n    _this2.handleChange = function (e, _ref11) {\n      var name = _ref11.name,\n          value = _ref11.value,\n          type = _ref11.type;\n      console.log('name', name, 'value', value);\n\n      _this2.setState(_defineProperty({}, name, value), function () {\n        console.log('this.state.initialNode', _this2.state.initialNode);\n      });\n\n      if (name == 'gameType') {\n        _this2.setState({\n          addGameNodeDisabled: false,\n          gameStartDisabled: false\n        });\n      }\n    };\n\n    _this2.handleChangeCheckBox = function (e, _ref12) {\n      var name = _ref12.name,\n          checked = _ref12.checked;\n\n      if (name === 'gameStart') {\n        // this.setState({ [name]: checked }, () => {console.log('checked',checked)});\n        console.log('checked', checked);\n\n        if (checked) {\n          _this2.setState({\n            gameStart: 'Opponent',\n            isGameStartChecked: checked\n          });\n        } else {\n          _this2.setState({\n            gameStart: 'Proponent',\n            isGameStartChecked: checked\n          });\n        }\n      }\n    };\n\n    _this2.showResult = function () {\n      var resultMessage = _this2.state.resultMessage;\n\n      if (resultMessage == null) {\n        var tempMessage = 'No winning statergy so far';\n\n        _this2.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage\n        });\n      } else {\n        _this2.setState({\n          status: 'Show',\n          messageColor: 'blue',\n          message: resultMessage\n        });\n      }\n    };\n\n    _this2.hint = function (initialNode, gameTreeList, nodes, edges, gameStart) {\n      console.log(initialNode, gameTreeList, nodes, edges);\n\n      _this2.setState({\n        showDimmer: true\n      });\n\n      _this2.props.hintMove(initialNode, gameTreeList, nodes, edges, gameStart);\n    };\n\n    _this2.state = {\n      email: '',\n      password: '',\n      loading: false,\n      reactFlowInstance: '',\n      initialNode: '',\n      removeNode: '',\n      gameType: '',\n      gameNode: '',\n      gameTreeMap: [],\n      gameTreeList: [],\n      validateMoveResult: [],\n      validateMoveClicked: false,\n      proponentWinCount: 0,\n      opponentWinCount: 0,\n      lastAddedNode: '',\n      defaultNodes: [],\n      defaultEdges: [],\n      resultMessage: null,\n      hintMessage: '',\n      addMapNodeDisabled: false,\n      removeDisabled: false,\n      saveDisabled: false,\n      resetMapDisabled: false,\n      playGameDisabled: false,\n      gameTypeDisabled: true,\n      addGameNodeDisabled: true,\n      validateDisabled: true,\n      resetGameDisabled: true,\n      hintDisabled: true,\n      resultDisabled: true,\n      resetMapClicked: false,\n      gameStartDisabled: true,\n      status: 'Hide',\n      message: '',\n      showDimmer: false,\n      messageColor: 'blue',\n      gameStart: 'Proponent',\n      isGameStartChecked: false\n    };\n    _this2.showErr = React.createRef();\n    return _this2;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        showDimmer: true\n      });\n      this.props.getInitialMap();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      if (this.props.GAME_MAP_STATUS !== 'SUCCESS' && nextProps.GAME_MAP_STATUS === 'SUCCESS') {\n        this.setState({\n          gameTreeMap: nextProps.gameTreeMap,\n          showDimmer: false,\n          status: 'Show',\n          messageColor: 'teal',\n          message: 'Let\\'s play Argument Game !! ALL THE BEST :-)'\n        });\n        console.log('nextProps.gameTreeMap', nextProps.gameTreeMap);\n      } else if (this.props.GAME_MAP_STATUS !== 'FAILED' && nextProps.GAME_MAP_STATUS === 'FAILED') {\n        var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n        this.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage,\n          showDimmer: false\n        });\n      }\n\n      if (this.props.GAME_LIST_STATUS !== 'SUCCESS' && nextProps.GAME_LIST_STATUS === 'SUCCESS') {\n        this.setState({\n          gameTreeList: nextProps.gameTreeList\n        });\n        setTimeout(function () {\n          return _this3.setState({\n            showDimmer: false\n          });\n        }, 100);\n        console.log('nextProps.gameTreeList', nextProps.gameTreeList);\n      } else if (this.props.GAME_LIST_STATUS !== 'FAILED' && nextProps.GAME_LIST_STATUS === 'FAILED') {\n        var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n        this.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage,\n          showDimmer: false\n        });\n      }\n\n      if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'SUCCESS' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'SUCCESS') {\n        this.setState({\n          validateMoveResult: nextProps.validateMoveResult,\n          proponentWinCount: nextProps.proponentWinCount,\n          opponentWinCount: nextProps.opponentWinCount\n        }, function () {\n          _this3.setState({\n            validateMoveClicked: true\n          });\n        });\n        setTimeout(function () {\n          return _this3.setState({\n            showDimmer: false\n          });\n        }, 100);\n        console.log('nextProps.validateMoveResult', nextProps.validateMoveResult);\n      } else if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'FAILED' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'FAILED') {\n        this.setState({\n          validateMoveResult: nextProps.validateMoveResult\n        }, function () {\n          _this3.setState({\n            validateMoveClicked: true\n          });\n        });\n        setTimeout(function () {\n          return _this3.setState({\n            showDimmer: false\n          });\n        }, 100);\n      }\n\n      if (this.props.INITIAL_MAP_STATUS !== 'SUCCESS' && nextProps.INITIAL_MAP_STATUS === 'SUCCESS') {\n        this.setState({\n          showDimmer: false,\n          defaultNodes: JSON.parse(nextProps.initialMap.nodes),\n          defaultEdges: JSON.parse(nextProps.initialMap.edges)\n        });\n      } else if (this.props.INITIAL_MAP_STATUS !== 'FAILED' && nextProps.INITIAL_MAP_STATUS === 'FAILED') {\n        var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n        this.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage,\n          showDimmer: false\n        });\n      }\n\n      if (this.props.SAVE_MAP_STATUS !== 'SUCCESS' && nextProps.SAVE_MAP_STATUS === 'SUCCESS') {\n        var tempMessage = 'Saved Succesfully !';\n        this.setState({\n          status: 'Show',\n          messageColor: 'blue',\n          message: tempMessage,\n          showDimmer: false\n        });\n      } else if (this.props.SAVE_MAP_STATUS !== 'FAILED' && nextProps.SAVE_MAP_STATUS === 'FAILED') {\n        var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n        this.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage,\n          showDimmer: false\n        });\n      }\n\n      if (this.props.HINT_MOVE_STATUS !== 'SUCCESS' && nextProps.HINT_MOVE_STATUS === 'SUCCESS') {\n        this.setState({\n          status: 'Show',\n          messageColor: 'blue',\n          message: nextProps.hintMessage,\n          hintMessage: nextProps.hintMessage\n        });\n        setTimeout(function () {\n          return _this3.setState({\n            showDimmer: false\n          });\n        }, 100);\n      } else if (this.props.HINT_MOVE_STATUS !== 'FAILED' && nextProps.HINT_MOVE_STATUS === 'FAILED') {\n        var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n        this.setState({\n          status: 'Show',\n          messageColor: 'red',\n          message: tempMessage\n        });\n        setTimeout(function () {\n          return _this3.setState({\n            showDimmer: false\n          });\n        }, 100);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          initialNode = _this$state.initialNode,\n          removeNode = _this$state.removeNode,\n          gameType = _this$state.gameType,\n          gameNode = _this$state.gameNode,\n          gameTreeList = _this$state.gameTreeList,\n          defaultNodes = _this$state.defaultNodes,\n          defaultEdges = _this$state.defaultEdges,\n          resetMapClicked = _this$state.resetMapClicked,\n          gameStartDisabled = _this$state.gameStartDisabled,\n          validateMoveClicked = _this$state.validateMoveClicked,\n          validateMoveResult = _this$state.validateMoveResult,\n          proponentWinCount = _this$state.proponentWinCount,\n          opponentWinCount = _this$state.opponentWinCount,\n          lastAddedNode = _this$state.lastAddedNode,\n          showDimmer = _this$state.showDimmer,\n          gameStart = _this$state.gameStart,\n          saveDisabled = _this$state.saveDisabled,\n          resetMapDisabled = _this$state.resetMapDisabled,\n          playGameDisabled = _this$state.playGameDisabled,\n          gameTypeDisabled = _this$state.gameTypeDisabled,\n          resultDisabled = _this$state.resultDisabled,\n          removeDisabled = _this$state.removeDisabled,\n          messageColor = _this$state.messageColor,\n          isGameStartChecked = _this$state.isGameStartChecked,\n          addGameNodeDisabled = _this$state.addGameNodeDisabled,\n          validateDisabled = _this$state.validateDisabled,\n          resetGameDisabled = _this$state.resetGameDisabled,\n          hintDisabled = _this$state.hintDisabled,\n          addMapNodeDisabled = _this$state.addMapNodeDisabled,\n          status = _this$state.status,\n          message = _this$state.message;\n      var options = [{\n        key: 'Preferred',\n        text: 'Preferred',\n        value: 'Preferred'\n      }, {\n        key: 'Grounded',\n        text: 'Grounded',\n        value: 'Grounded'\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Dimmer, {\n        active: showDimmer,\n        page: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h4\",\n        icon: true,\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"spinner\",\n        loading: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }\n      }), \"Please wait, we are processing your request..\")), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"split left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Node\",\n        name: \"removeNode\",\n        value: removeNode,\n        type: \"Number\",\n        onChange: this.handleChange,\n        style: {\n          width: 80,\n          marginTop: -10,\n          marginLeft: 155\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(ReactFlowProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Save, {\n        saveMap: this.saveMap,\n        saveDisabled: saveDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ResetMap, {\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        resetMapDisabled: resetMapDisabled,\n        resetMap: this.resetMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Remove, {\n        removeNode: removeNode,\n        removeDisabled: removeDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(PlayGame, {\n        playGameFunction: this.playGameFunction,\n        playGameDisabled: playGameDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Flow, {\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        addMapNodeDisabled: addMapNodeDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 9\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"split right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Node\",\n        name: \"gameNode\",\n        value: gameNode,\n        type: \"Number\",\n        onChange: this.handleChange,\n        style: {\n          width: 80,\n          marginTop: -10,\n          marginLeft: 205\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        placeholder: \"Game Type\",\n        name: \"gameType\",\n        value: gameType,\n        options: options,\n        onChange: this.handleChange,\n        selection: true,\n        style: {\n          width: 60,\n          marginTop: -10,\n          marginLeft: -280\n        },\n        disabled: gameTypeDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.showResult,\n        className: \"btn-add9\",\n        disabled: resultDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 5\n        }\n      }, \"Result\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"checkboxComputer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        onClick: this.handleChangeCheckBox,\n        name: \"gameStart\",\n        checked: isGameStartChecked,\n        disabled: gameStartDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"labelStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 7\n        }\n      }, \"Opponent Starts\")), /*#__PURE__*/React.createElement(ReactFlowProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(PlayFlow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(AddNodeGame, {\n        value: gameNode,\n        addbutton: this.addbutton,\n        addGameNodeDisabled: addGameNodeDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(ResetGame, {\n        resetGame: this.resetGame,\n        resetGameDisabled: resetGameDisabled,\n        resetMapClicked: resetMapClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Hint, {\n        hint: this.hint,\n        initialNode: initialNode,\n        gameTreeList: gameTreeList,\n        hintDisabled: hintDisabled,\n        gameStart: gameStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Validate, {\n        initialNode: initialNode,\n        gameTreeList: gameTreeList,\n        validateMove: this.validateMove,\n        gameStart: gameStart,\n        validateMoveClicked: validateMoveClicked,\n        validateMoveResult: validateMoveResult,\n        lastAddedNode: lastAddedNode,\n        validationFinished: this.validationFinished,\n        proponentWinCount: proponentWinCount,\n        opponentWinCount: opponentWinCount,\n        validateDisabled: validateDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 7\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 5\n        }\n      }, status === 'Show' && /*#__PURE__*/React.createElement(\"div\", {\n        class: \"messageDisplayed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Message, {\n        color: messageColor,\n        size: \"big\",\n        compact: true,\n        style: {\n          maxWidth: 800,\n          minWidth: 800\n        },\n        onDismiss: function onDismiss() {\n          return _this4.setState({\n            status: 'Hide'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }\n      }, message)))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    GAME_MAP_STATUS: state.user.meta.GAME_MAP_STATUS,\n    GAME_LIST_STATUS: state.user.meta.GAME_LIST_STATUS,\n    VALIDATE_MOVE_RESULT_STATUS: state.user.meta.VALIDATE_MOVE_RESULT_STATUS,\n    INITIAL_MAP_STATUS: state.user.meta.INITIAL_MAP_STATUS,\n    SAVE_MAP_STATUS: state.user.meta.SAVE_MAP_STATUS,\n    HINT_MOVE_STATUS: state.user.meta.HINT_MOVE_STATUS,\n    sessionId: state.user.data.sessionId,\n    gameTreeMap: state.user.data.gameTreeMap,\n    gameTreeList: state.user.data.gameTreeList,\n    validateMoveResult: state.user.data.validateMoveResult,\n    saveMapResult: state.user.data.saveMapResult,\n    initialMap: state.user.data.initialMap,\n    hintMessage: state.user.data.hintMessage\n  };\n};\n\nvar mapDispatchToProps = {\n  getGameMap: getGameMap,\n  getGameList: getGameList,\n  validateMove: validateMove,\n  getInitialMap: getInitialMap,\n  saveMap: saveMap,\n  hintMove: hintMove\n}; //export default LoginScreen;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);","map":{"version":3,"names":["React","useState","Fragment","Component","Input","Dropdown","Message","Dimmer","Header","Icon","Checkbox","useCallback","ReactFlow","ReactFlowProvider","useReactFlow","defaultGameNodes","defaultGameEdges","connect","getGameMap","getGameList","validateMove","getInitialMap","saveMap","hintMove","ErrorMessage","edgeOptions","animated","style","stroke","connectionLineStyle","nodeId","Flow","defaultNodes","defaultEdges","addMapNodeDisabled","reactFlowInstance","onClick","count","getNodes","length","id","newNode","position","x","Math","floor","random","y","data","label","addNodes","backgroundColor","Save","saveDisabled","getEdges","ResetMap","resetMapDisabled","resetMap","setNodes","setEdges","Remove","removeNode","removeDisabled","console","log","tempNodes","filter","tempEdges","source","target","PlayGame","playGameFunction","playGameDisabled","PlayFlow","AddNodeGame","value","addbutton","addGameNodeDisabled","split","gameNode","ResetGame","resetGame","resetGameDisabled","resetMapClicked","Validate","initialNode","gameTreeList","validateMoveClicked","validateMoveResult","validationFinished","proponentWinCount","opponentWinCount","lastAddedNode","validateDisabled","gameStart","tempProponentWinCount","tempOpponentWinCount","result","win","message","node","edgePresent","i","edge","addEdges","Hint","hint","hintDisabled","LoginScreen","props","nodes","edges","temp","JSON","stringify","parse","state","gameType","setState","showDimmer","gameTypeDisabled","gameTreeMap","gameStartDisabled","resultMessage","resultDisabled","status","messageColor","exceptionMessage","isGameStartChecked","handleChange","e","name","type","handleChangeCheckBox","checked","showResult","tempMessage","email","password","loading","hintMessage","showErr","createRef","nextProps","GAME_MAP_STATUS","GAME_LIST_STATUS","setTimeout","VALIDATE_MOVE_RESULT_STATUS","INITIAL_MAP_STATUS","initialMap","SAVE_MAP_STATUS","HINT_MOVE_STATUS","options","key","text","width","marginTop","marginLeft","maxWidth","minWidth","mapStateToProps","user","meta","sessionId","saveMapResult","mapDispatchToProps"],"sources":["C:/Users/adity/Desktop/Argument Games UI/src/pages/login-screen.jsx"],"sourcesContent":["import React, {useState, Fragment, Component} from 'react';\nimport { Input,Dropdown,Message,Dimmer, Header, Icon,Checkbox  } from \"semantic-ui-react\";\nimport { useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, useReactFlow } from 'react-flow-renderer';\n\n// import defaultNodes from './nodes.js';\nimport defaultGameNodes from './gameNode.js';\n// import defaultEdges from './edges.js';\nimport defaultGameEdges from './gameEdge.js';\nimport './button.css';\n\n\n//redux\nimport { connect } from 'react-redux';\nimport { getGameMap,getGameList,validateMove,getInitialMap,saveMap,hintMove } from '../actions/UserActions';\nimport ErrorMessage from \"../components/show-error\";\n\n\nconst edgeOptions = {\n  animated: false,\n  style: {\n    stroke: 'black',\n  },\n};\n\nconst connectionLineStyle = { stroke: 'black' };\nlet nodeId = 0;\n\nconst Flow = ({defaultNodes,defaultEdges,addMapNodeDisabled}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    var count = reactFlowInstance.getNodes().length;\n    const id = `${++count}`;\n    const newNode = {\n      id,\n      position: {\n        // x: Math.random() * 500,\n        // y: 0.25 * 500,\n        x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\n        y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\n      },\n      data: {\n        label: `Node ${id}`,\n      },\n    };\n    reactFlowInstance.addNodes(newNode);\n    \n  }, []);\n\n  return (\n    <React.Fragment>\n      <button onClick={onClick} className=\"btn-add\" disabled={addMapNodeDisabled}>\n       Add Node\n     </button>\n    <ReactFlow\n      defaultNodes={defaultNodes}\n      defaultEdges={defaultEdges}\n      defaultEdgeOptions={edgeOptions}\n      fitView\n      style={{\n        backgroundColor: '#D3D2E5',\n      }}\n      connectionLineStyle={connectionLineStyle}\n    />\n      </React.Fragment>\n  );\n}\n\nconst Save = ({saveMap,saveDisabled}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    saveMap(reactFlowInstance.getNodes(),reactFlowInstance.getEdges());\n  }, []);\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick} className=\"btn-add2\" disabled={saveDisabled}>\n       <Icon name='save'/>Save\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst ResetMap = ({defaultNodes, defaultEdges,resetMapDisabled,resetMap}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    reactFlowInstance.setNodes(defaultNodes);\n    reactFlowInstance.setEdges(defaultEdges)\n    nodeId = 0;\n    resetMap();\n  }, []);\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick} className=\"btn-add4\" disabled={resetMapDisabled}>\n       <Icon name='undo' size='small'/>Reset\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst Remove = ({removeNode,removeDisabled}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = removeNode => () => {\n    console.log(typeof(removeNode),'removeNode',removeNode)\n    var tempNodes = reactFlowInstance.getNodes().filter((x) => {\n\t\t\treturn x.id !== removeNode\n\t\t});\n    var tempEdges = reactFlowInstance.getEdges().filter((x) => {\n\t\t\treturn (x.source !== removeNode && x.target !== removeNode)\n\t\t});\n    reactFlowInstance.setNodes(tempNodes);\n    reactFlowInstance.setEdges(tempEdges);\n    // nodeId = 2;\n  };\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick(removeNode)} className=\"btn-add8\" disabled={removeDisabled}>\n     <Icon name='trash' size='small'/>Remove\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst PlayGame = ({playGameFunction,playGameDisabled}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    playGameFunction(reactFlowInstance.getNodes(),reactFlowInstance.getEdges());\n    // console.log('getNodes',JSON.stringify(reactFlowInstance.getNodes()),'getEdges',JSON.stringify(reactFlowInstance.getEdges()))\n  }, []);\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick} className=\"btn-add3\" disabled={playGameDisabled}>\n     <Icon name='play'/>Game\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst PlayFlow = ({}) => {\n  const reactFlowInstance = useReactFlow();\n  return (\n    <React.Fragment>\n      {/* <button onClick={onClick(value)} className=\"btn-add5\">\n       Add\n     </button> */}\n    <ReactFlow\n       defaultNodes={defaultGameNodes}\n       defaultEdges={defaultGameEdges}\n      defaultEdgeOptions={edgeOptions}\n      fitView\n      style={{\n        backgroundColor: '#f4b1b1',\n      }}\n      connectionLineStyle={connectionLineStyle}\n    />\n      </React.Fragment>\n  );\n}\n\nconst AddNodeGame = ({value,addbutton,addGameNodeDisabled}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = value => () => {\n    var tempNodes = reactFlowInstance.getNodes().filter((x) => {\n      return (x.id).split('(')[0] == value\n\t\t});\n    var id = value ;\n    if(tempNodes.length != 0){\n      id = value + '('+ (tempNodes.length+1) + ')'\n    }\n    \n    console.log('typeof',typeof(id),'id', id)\n    const gameNode = {\n      id,\n      position: {\n        // x: Math.random() * 500,\n        // y: 0.25 * 500,\n        x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\n        y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\n      },\n      data: {\n        label: `Node ${id}`\n      },\n    };\n    console.log('gameNode', gameNode);\n    reactFlowInstance.addNodes(gameNode);\n    console.log(reactFlowInstance.getEdges());\n    addbutton(gameNode);\n  };\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick(value)} className=\"btn-add5\" disabled={addGameNodeDisabled}>\n      <Icon name='add'/>\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst ResetGame = ({resetGame,resetGameDisabled,resetMapClicked}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = useCallback(() => {\n    reactFlowInstance.setNodes(defaultGameNodes);\n    reactFlowInstance.setEdges(defaultGameEdges);\n    resetGame();\n  }, []);\n  if(resetMapClicked){\n    reactFlowInstance.setNodes(defaultGameNodes);\n    reactFlowInstance.setEdges(defaultGameEdges);\n    resetGame();\n  }\n  return (\n    <React.Fragment>  \n     <button onClick={onClick} className=\"btn-add6\" disabled={resetGameDisabled}>\n      <Icon name='undo'/>\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst Validate = ({initialNode,gameTreeList,validateMove,validateMoveClicked,validateMoveResult, \n  validationFinished, proponentWinCount, opponentWinCount,lastAddedNode,validateDisabled,gameStart}) => {\n  const reactFlowInstance = useReactFlow();\n  var tempProponentWinCount = -1, tempOpponentWinCount = -1;\n  // console.log('initialNode',initialNode,'gameTreeList',gameTreeList,'validateMove',validateMove);\n  const onClick = (initialNode,gameTreeList,validateMove,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => () => {\n    console.log('2',initialNode,gameTreeList)\n    // alert('Invalid Move');\n    // reactFlowInstance.addNodes({id: '2',data: { label: 'Node 2' }, position: { x: 250, y: 25 }});\n    // reactFlowInstance.addEdges({id: 'e1-2', source: '1', target: '2'});\n    validateMove(initialNode,gameTreeList,reactFlowInstance.getNodes(),reactFlowInstance.getEdges(),lastAddedNode.id, \n    proponentWinCount, opponentWinCount,gameStart);\n    \n  };\n  console.log('validateMoveClicked',validateMoveClicked);\n  console.log('validateMoveResult',validateMoveResult);\n  if(validateMoveClicked){\n    console.log('validateMoveResult',validateMoveResult)\n    if(validateMoveResult.result){\n      \n    if(validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over'){\n      if(validateMoveResult.message != null){\n          tempProponentWinCount = validateMoveResult.proponentWinCount;\n          tempOpponentWinCount = validateMoveResult.opponentWinCount;\n          // alert(validateMoveResult.message)\n      }\n    }else if(validateMoveResult.win == 'Won'){\n\n      const id = validateMoveResult.node.id;\n      const gameNode = {\n        id,\n        position: {\n          // x: Math.random() * 500,\n          // y: 0.25 * 500,\n          x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\n          y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\n        },\n        data: {\n          label: `Node ${id}`,\n        }\n      }\n      reactFlowInstance.addNodes(gameNode);\n      var edgePresent = false;\n      var tempEdges = reactFlowInstance.getEdges();\n      for (let i = 0; i < reactFlowInstance.getEdges().length; i++) {\n        if(validateMoveResult.edge.source == tempEdges[i].source && validateMoveResult.edge.target == tempEdges[i].target){\n          edgePresent=true;\n        }\n      }\n      if(!edgePresent){\n        reactFlowInstance.addEdges(validateMoveResult.edge);\n        }\n      if(validateMoveResult.message != null){\n        tempProponentWinCount = validateMoveResult.proponentWinCount;\n        tempOpponentWinCount = validateMoveResult.opponentWinCount;\n        // alert(validateMoveResult.message)\n        }\n      }\n    }else{\n      var tempNodes = reactFlowInstance.getNodes().filter((x) => {\n        return x.id !== lastAddedNode.id\n      });\n      var tempEdges = reactFlowInstance.getEdges().filter((x) => {\n        return (x.source !== lastAddedNode.id && x.target !== lastAddedNode.id)\n      });\n      reactFlowInstance.setNodes(tempNodes);\n      reactFlowInstance.setEdges(tempEdges);\n      // alert(validateMoveResult.exceptionMessage)\n    }\n    validationFinished(tempProponentWinCount,tempOpponentWinCount,validateMoveResult);\n  }\n\n  return (\n    <React.Fragment>\n     <button onClick={onClick(initialNode,gameTreeList,validateMove,lastAddedNode,proponentWinCount,opponentWinCount,gameStart)} className=\"btn-add7\" disabled={validateDisabled}>\n     <Icon name='check circle outline' />Validate\n     </button>\n      </React.Fragment>\n  );\n}\n\nconst Hint = ({hint,initialNode,gameTreeList,hintDisabled,gameStart}) => {\n  const reactFlowInstance = useReactFlow();\n  const onClick = (hint,initialNode,gameTreeList,gameStart) => () => {\n    console.log('hint initialNode', initialNode)\n    hint(initialNode,gameTreeList,reactFlowInstance.getNodes(), reactFlowInstance.getEdges(),gameStart);\n  };\n\n  return (\n    <React.Fragment>  \n     <button onClick={onClick(hint,initialNode,gameTreeList,gameStart)} className=\"btn-add10\" disabled={hintDisabled}>\n      <Icon name='idea'/>Hint\n     </button>\n    </React.Fragment>\n  );\n}\n\nclass LoginScreen extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      reactFlowInstance : '',\n      initialNode:'',\n      removeNode:'',\n      gameType:'',\n      gameNode:'',\n      gameTreeMap:[],\n      gameTreeList:[],\n      validateMoveResult:[],\n      validateMoveClicked:false,\n      proponentWinCount:0,\n      opponentWinCount:0,\n      lastAddedNode:'',\n      defaultNodes:[],\n      defaultEdges:[],\n      resultMessage:null,\n      hintMessage:'',\n      addMapNodeDisabled:false,\n      removeDisabled:false,\n      saveDisabled:false,\n      resetMapDisabled:false,\n      playGameDisabled:false,\n      gameTypeDisabled:true,\n      addGameNodeDisabled:true,\n      validateDisabled:true,\n      resetGameDisabled:true,\n      hintDisabled:true,\n      resultDisabled:true,\n      resetMapClicked:false,\n      gameStartDisabled:true,\n      status:'Hide',\n      message:'',\n      showDimmer:false,\n      messageColor:'blue',\n      gameStart:'Proponent',\n      isGameStartChecked:false\n    }\n    this.showErr = React.createRef(); \n  }\n\n  componentDidMount(){\n    this.setState({showDimmer:true});\n    this.props.getInitialMap()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.GAME_MAP_STATUS !== 'SUCCESS' && nextProps.GAME_MAP_STATUS === 'SUCCESS') {\n      this.setState({ gameTreeMap: nextProps.gameTreeMap,showDimmer:false,\n                      status:'Show', messageColor:'teal', message:'Let\\'s play Argument Game !! ALL THE BEST :-)' });\n      console.log('nextProps.gameTreeMap',nextProps.gameTreeMap);\n    } else if (this.props.GAME_MAP_STATUS !== 'FAILED' && nextProps.GAME_MAP_STATUS === 'FAILED') {\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage, showDimmer:false});\n    }\n\n    if (this.props.GAME_LIST_STATUS !== 'SUCCESS' && nextProps.GAME_LIST_STATUS === 'SUCCESS') {\n      this.setState({ gameTreeList: nextProps.gameTreeList });\n      setTimeout(() => this.setState({showDimmer:false}), 100);\n      console.log('nextProps.gameTreeList',nextProps.gameTreeList);\n    } else if (this.props.GAME_LIST_STATUS !== 'FAILED' && nextProps.GAME_LIST_STATUS === 'FAILED') {\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\n    }\n\n    if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'SUCCESS' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'SUCCESS') {\n      this.setState({ validateMoveResult: nextProps.validateMoveResult, proponentWinCount: nextProps.proponentWinCount, \n              opponentWinCount: nextProps.opponentWinCount},() => {this.setState({validateMoveClicked: true})});\n      setTimeout(() => this.setState({showDimmer:false}), 100);\n      console.log('nextProps.validateMoveResult',nextProps.validateMoveResult);\n    } else if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'FAILED' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'FAILED') {\n      this.setState({ validateMoveResult: nextProps.validateMoveResult}, () => {this.setState({validateMoveClicked: true})});\n      setTimeout(() => this.setState({showDimmer:false}), 100);\n    }\n\n    if (this.props.INITIAL_MAP_STATUS !== 'SUCCESS' && nextProps.INITIAL_MAP_STATUS === 'SUCCESS') {\n      this.setState({ showDimmer:false, defaultNodes: JSON.parse(nextProps.initialMap.nodes), defaultEdges: JSON.parse(nextProps.initialMap.edges)});\n    } else if (this.props.INITIAL_MAP_STATUS !== 'FAILED' && nextProps.INITIAL_MAP_STATUS === 'FAILED') {\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\n    }\n\n    if (this.props.SAVE_MAP_STATUS !== 'SUCCESS' && nextProps.SAVE_MAP_STATUS === 'SUCCESS') {\n      var tempMessage = 'Saved Succesfully !';\n      this.setState({ status:'Show', messageColor:'blue', message:tempMessage,showDimmer:false});\n    } else if (this.props.SAVE_MAP_STATUS !== 'FAILED' && nextProps.SAVE_MAP_STATUS === 'FAILED') {\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\n    }\n\n    if (this.props.HINT_MOVE_STATUS !== 'SUCCESS' && nextProps.HINT_MOVE_STATUS === 'SUCCESS') {\n      this.setState({ status:'Show', messageColor:'blue', message:nextProps.hintMessage,hintMessage: nextProps.hintMessage});\n      setTimeout(() => this.setState({showDimmer:false}), 100);\n    } else if (this.props.HINT_MOVE_STATUS !== 'FAILED' && nextProps.HINT_MOVE_STATUS === 'FAILED') {\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage});\n      setTimeout(() => this.setState({showDimmer:false}), 100);\n    }\n\n  }\n\n  saveMap = (nodes,edges) => {\n    // const { email, password } = this.state;\n    // this.setState({ loading: true });\n    // const reactFlowInstance = useReactFlow();\n    var temp = JSON.stringify(nodes);\n    console.log('nodes',JSON.stringify(nodes), 'edges', JSON.stringify(edges), 'nodesParse', JSON.parse(temp));\n    // this.setState({reactFlowInstance:edges} , () => (\"this.state.reactFlowInstance\",console.log(this.state.reactFlowInstance)) );\n    console.log('gameType',this.state.gameType);\n    this.setState({showDimmer:true});\n    this.props.saveMap(JSON.stringify(nodes), JSON.stringify(edges));\n  }\n\n  playGameFunction = (nodes,edges) => {\n    this.setState({initialNode:null,addMapNodeDisabled:true, removeDisabled:true, playGameDisabled:true, gameTypeDisabled:false,\n       resetGameDisabled:false,removeNode:'',showDimmer:true});\n    console.log('nodes',nodes,'edges',edges)\n    this.props.getGameMap(nodes,edges);\n  }\n\n  addbutton = (gameNode) => {\n    let {initialNode,gameTreeMap,gameType,gameStart} = this.state;\n    if(initialNode == null){\n      if(gameStart == 'Proponent'){\n        this.setState({initialNode:gameNode.id, lastAddedNode:gameNode,validateDisabled:false,gameTypeDisabled:true,\n          addGameNodeDisabled:true,hintDisabled:true,showDimmer:true,gameStartDisabled:true})\n      }else{\n        this.setState({initialNode:gameNode.id, lastAddedNode:gameNode,validateDisabled:true,gameTypeDisabled:true,\n          addGameNodeDisabled:false,hintDisabled:false,showDimmer:true,gameStartDisabled:true})\n      }\n      \n      this.props.getGameList(gameType,gameNode.id,gameTreeMap,gameStart);\n      console.log('initialNode',initialNode)\n    }else{\n      this.setState({lastAddedNode:gameNode,validateDisabled:false,addGameNodeDisabled:true,\n                     hintDisabled:true})\n    }\n  }\n\n  validateMove = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\n    this.setState({showDimmer:true});\n    this.props.validateMove(initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart);\n    console.log('this.state.validateMoveClicked', this.state.validateMoveClicked)\n  \n  }\n\n  validationFinished = (tempProponentWinCount,tempOpponentWinCount,validateMoveResult) => {\n    if(tempProponentWinCount !== -1 && tempOpponentWinCount !== -1){\n      this.setState({validateMoveClicked:false, proponentWinCount:tempProponentWinCount, opponentWinCount:tempOpponentWinCount});\n    }else{\n      this.setState({validateMoveClicked:false});\n    }\n    if(validateMoveResult.message != null){\n      this.setState({resultMessage:validateMoveResult.message});\n      }\n    this.setState({validateDisabled:true,hintDisabled:false,addGameNodeDisabled:false,resultDisabled:false});\n    if(validateMoveResult.result){\n      if(validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over'){\n        if(validateMoveResult.message != null){\n          this.setState({ status:'Show', messageColor:'blue', message:validateMoveResult.message});\n        }\n      }else if(validateMoveResult.win == 'Won'){\n        if(validateMoveResult.message != null){\n          this.setState({ status:'Show', messageColor:'blue', message:validateMoveResult.message});\n        }\n      }\n    }else{\n      this.setState({ status:'Show', messageColor:'red', message:validateMoveResult.exceptionMessage});\n    }\n  }\n\n  resetGame = () => {\n    if(this.state.resetMapClicked){\n      this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:false,\n        gameType:'', gameNode:'',gameTypeDisabled:true,addGameNodeDisabled:true,gameStart:'Proponent',isGameStartChecked:false,\n        gameStartDisabled:true});\n    }else{\n      this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:false,\n        gameType:'', gameNode:'',gameTypeDisabled:false,addGameNodeDisabled:true,gameStart:'Proponent',isGameStartChecked:false,\n        gameStartDisabled:true });\n    }\n  }\n\n  resetMap = () => {\n    this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:true,\n        addMapNodeDisabled:false,removeDisabled:false,saveDisabled:false,resetMapDisabled:false,playGameDisabled:false,\n        gameTypeDisabled:true,addGameNodeDisabled:true,validateDisabled:true,resetGameDisabled:true,hintDisabled:true,\n        resultDisabled:true,gameType:'', gameNode:'',removeNode:'',gameStart:'Proponent',isGameStartChecked:false,\n        gameStartDisabled:true });\n  }\n  \n  handleChange = (e, { name, value, type }) => {\n      console.log('name', name, 'value', value);\n      this.setState({ [name]: value }, () => {console.log('this.state.initialNode',this.state.initialNode)});\n      if(name == 'gameType'){\n        this.setState({addGameNodeDisabled:false,gameStartDisabled:false});\n      }\n  }\n\n  handleChangeCheckBox = (e, { name, checked }) => {\n\t\tif (name === 'gameStart') {\n\t\t\t// this.setState({ [name]: checked }, () => {console.log('checked',checked)});\n      console.log('checked',checked)\n      if(checked){\n        this.setState({gameStart: 'Opponent',isGameStartChecked:checked});\n      }else{\n        this.setState({gameStart: 'Proponent',isGameStartChecked:checked});\n      }\n\t\t}\n\t}\n\n  showResult = () => {\n    let {resultMessage} = this.state;\n    if(resultMessage == null){\n      var tempMessage = 'No winning statergy so far';\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage});\n    }else{\n      this.setState({ status:'Show', messageColor:'blue', message:resultMessage});\n    }\n  }  \n\n  hint = (initialNode,gameTreeList,nodes, edges,gameStart) => {\n    console.log(initialNode,gameTreeList,nodes, edges)\n    this.setState({showDimmer:true});\n    this.props.hintMove(initialNode,gameTreeList,nodes, edges,gameStart)\n  }\n\n  render() {\n    let {initialNode,removeNode,gameType,gameNode,gameTreeList,defaultNodes,defaultEdges,resetMapClicked,gameStartDisabled,\n         validateMoveClicked,validateMoveResult,proponentWinCount,opponentWinCount, lastAddedNode,showDimmer,gameStart,\n         saveDisabled,resetMapDisabled,playGameDisabled,gameTypeDisabled,resultDisabled,removeDisabled,messageColor,isGameStartChecked,\n         addGameNodeDisabled,validateDisabled,resetGameDisabled,hintDisabled,addMapNodeDisabled,status,message} = this.state;\n    const options = [\n      { key: 'Preferred', text: 'Preferred', value: 'Preferred' },\n      { key: 'Grounded', text: 'Grounded', value: 'Grounded' }\n    ]\n    return (\n    <React.Fragment>\n\n    <Dimmer active={showDimmer} page={true}>\n        <Header as='h4' icon inverted>\n            <Icon name='spinner' loading={true} />\n              Please wait, we are processing your request..\n\t\t    </Header>\n    </Dimmer>  \n\n    <div class=\"split left\">\n      <Input placeholder='Node' name='removeNode' value={removeNode} type='Number' \n      onChange={this.handleChange} style={{ width:80,marginTop:-10, marginLeft:155}}/>\n      <ReactFlowProvider>\n        <Save saveMap={this.saveMap} saveDisabled={saveDisabled}/>\n        <ResetMap defaultNodes={defaultNodes} defaultEdges={defaultEdges} resetMapDisabled={resetMapDisabled} resetMap={this.resetMap}/>\n        <Remove removeNode={removeNode} removeDisabled={removeDisabled}/>\n        <PlayGame playGameFunction={this.playGameFunction} playGameDisabled={playGameDisabled}/>\n        <Flow defaultNodes={defaultNodes} defaultEdges={defaultEdges} addMapNodeDisabled={addMapNodeDisabled}/>\n    </ReactFlowProvider>\n     \n    </div>\n\n    <div class=\"split right\">\n    <Input placeholder='Node' name='gameNode' value={gameNode} type='Number' \n      onChange={this.handleChange} style={{ width:80,marginTop:-10, marginLeft:205}}/>\n    <Dropdown placeholder='Game Type' name='gameType' value={gameType} options={options} onChange={this.handleChange} \n      selection style={{ width:60,marginTop:-10, marginLeft:-280}} disabled={gameTypeDisabled}/>\n    <button onClick={this.showResult} className=\"btn-add9\" disabled={resultDisabled}>\n       Result\n    </button>\n    <div class=\"checkboxComputer\">\n      <Checkbox onClick={this.handleChangeCheckBox} name='gameStart' checked={isGameStartChecked} disabled={gameStartDisabled} />\n      <label className=\"labelStyle\">Opponent Starts</label>\n    </div>\n    <ReactFlowProvider>\n      <PlayFlow  /> \n      <AddNodeGame value={gameNode} addbutton={this.addbutton} addGameNodeDisabled={addGameNodeDisabled}/>\n      <ResetGame resetGame={this.resetGame} resetGameDisabled={resetGameDisabled} resetMapClicked={resetMapClicked}/>\n      <Hint hint={this.hint} initialNode={initialNode} gameTreeList={gameTreeList} hintDisabled={hintDisabled} gameStart={gameStart}/>\n      <Validate initialNode={initialNode} gameTreeList={gameTreeList} validateMove={this.validateMove} gameStart={gameStart}\n        validateMoveClicked={validateMoveClicked} validateMoveResult={validateMoveResult} lastAddedNode={lastAddedNode}\n        validationFinished={this.validationFinished} proponentWinCount={proponentWinCount} opponentWinCount={opponentWinCount}\n        validateDisabled={validateDisabled}/>\n    </ReactFlowProvider>\n    </div>\n\n    <div>\n      {\n        (status === 'Show') &&\n        <div class=\"messageDisplayed\"> \n        <Message color={messageColor} size='big' compact style={{ maxWidth: 800,minWidth: 800 }}\n\t\t\t      onDismiss={() => this.setState({ status: 'Hide' })}>\n\t\t\t\t      <Message.Header>{message}</Message.Header>\n\t\t    </Message>\n        </div>\n      }\n    </div>\n    </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    GAME_MAP_STATUS: state.user.meta.GAME_MAP_STATUS,\n    GAME_LIST_STATUS: state.user.meta.GAME_LIST_STATUS,\n    VALIDATE_MOVE_RESULT_STATUS: state.user.meta.VALIDATE_MOVE_RESULT_STATUS,\n    INITIAL_MAP_STATUS: state.user.meta.INITIAL_MAP_STATUS,\n    SAVE_MAP_STATUS: state.user.meta.SAVE_MAP_STATUS,\n    HINT_MOVE_STATUS: state.user.meta.HINT_MOVE_STATUS,\n    sessionId: state.user.data.sessionId,\n    gameTreeMap: state.user.data.gameTreeMap,\n    gameTreeList: state.user.data.gameTreeList,\n    validateMoveResult: state.user.data.validateMoveResult,\n    saveMapResult: state.user.data.saveMapResult,\n    initialMap: state.user.data.initialMap,\n    hintMessage: state.user.data.hintMessage\n  }\n}\n\nconst mapDispatchToProps = {\n  getGameMap,\n  getGameList,\n  validateMove,\n  getInitialMap,\n  saveMap,\n  hintMove\n}\n\n//export default LoginScreen;\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen)"],"mappings":"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"},"metadata":{},"sourceType":"module"}