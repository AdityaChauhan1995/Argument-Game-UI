{"map":"{\"version\":3,\"sources\":[\"C:/Users/adity/Desktop/Argument Games UI/src/registerServiceWorker.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/actions/ActionTypes.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/reducers/user.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/reducers/index.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/store/index.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/pages/gameNode.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/pages/gameEdge.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/actions/UserActions.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/pages/login-screen.jsx\",\"C:/Users/adity/Desktop/Argument Games UI/src/components/show-error.jsx\",\"C:/Users/adity/Desktop/Argument Games UI/src/components/routes.js\",\"C:/Users/adity/Desktop/Argument Games UI/src/index.js\"],\"names\":[\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"GAME_MAP_PENDING\",\"GAME_MAP_FULFILLED\",\"GAME_MAP_REJECTED\",\"GAME_LIST_PENDING\",\"GAME_LIST_FULFILLED\",\"GAME_LIST_REJECTED\",\"VALIDATE_MOVE_RESULT_PENDING\",\"VALIDATE_MOVE_RESULT_FULFILLED\",\"VALIDATE_MOVE_RESULT_REJECTED\",\"INITIAL_MAP_PENDING\",\"INITIAL_MAP_FULFILLED\",\"INITIAL_MAP_REJECTED\",\"SAVE_MAP_PENDING\",\"SAVE_MAP_FULFILLED\",\"SAVE_MAP_REJECTED\",\"HINT_MOVE_PENDING\",\"HINT_MOVE_FULFILLED\",\"HINT_MOVE_REJECTED\",\"initialMetaState\",\"GAME_MAP_STATUS\",\"GAME_LIST_STATUS\",\"LOGOUT_STATUS\",\"VALIDATE_MOVE_RESULT_STATUS\",\"INITIAL_MAP_STATUS\",\"SAVE_MAP_STATUS\",\"HINT_MOVE_STATUS\",\"initialDataState\",\"sessionId\",\"name\",\"gameTreeMap\",\"gameTreeList\",\"validateMoveResult\",\"initialMap\",\"saveMapResult\",\"hintMessage\",\"combineReducers\",\"meta\",\"arguments\",\"length\",\"undefined\",\"type\",\"Object\",\"objectSpread\",\"data\",\"action\",\"payload\",\"router\",\"routerReducer\",\"user\",\"userReducer\",\"history\",\"createHistory\",\"basename\",\"middleware\",\"thunk\",\"promiseMiddleware\",\"routerMiddleware\",\"composedEnhancers\",\"compose\",\"apply\",\"applyMiddleware\",\"concat\",\"persistConfig\",\"key\",\"storage\",\"persistedReducer\",\"persistReducer\",\"rootReducer\",\"store\",\"createStore\",\"persistor\",\"persistStore\",\"pages_gameNode\",\"gameEdge\",\"GAME_MAP_URL\",\"process\",\"GAME_LIST_URL\",\"VALIDATE_URL\",\"INITIAL_MAP_URL\",\"SAVE_MAP_URL\",\"HINT_MOVE_URL\",\"getMap\",\"nodes\",\"edges\",\"axios\",\"post\",\"getList\",\"gameType\",\"initialNode\",\"gameStart\",\"validate\",\"lastAddedNode\",\"proponentWinCount\",\"opponentWinCount\",\"save\",\"hint\",\"edgeOptions\",\"Component\",\"animated\",\"style\",\"stroke\",\"connectionLineStyle\",\"Flow\",\"_ref\",\"defaultNodes\",\"defaultEdges\",\"addMapNodeDisabled\",\"reactFlowInstance\",\"useReactFlow\",\"onClick\",\"useCallback\",\"count\",\"getNodes\",\"id\",\"newNode\",\"position\",\"x\",\"Math\",\"floor\",\"random\",\"y\",\"label\",\"addNodes\",\"react_default\",\"a\",\"createElement\",\"Fragment\",\"className\",\"disabled\",\"esm\",\"defaultEdgeOptions\",\"fitView\",\"backgroundColor\",\"Save\",\"_ref2\",\"saveMap\",\"saveDisabled\",\"getEdges\",\"Icon\",\"ResetMap\",\"_ref3\",\"resetMapDisabled\",\"resetMap\",\"setNodes\",\"setEdges\",\"size\",\"Remove\",\"_ref4\",\"removeNode\",\"removeDisabled\",\"tempNodes\",\"filter\",\"tempEdges\",\"source\",\"target\",\"PlayGame\",\"_ref5\",\"playGameFunction\",\"playGameDisabled\",\"PlayFlow\",\"_ref6\",\"objectDestructuringEmpty\",\"defaultGameNodes\",\"defaultGameEdges\",\"AddNodeGame\",\"_ref7\",\"value\",\"addbutton\",\"addGameNodeDisabled\",\"split\",\"gameNode\",\"ResetGame\",\"_ref8\",\"resetGame\",\"resetGameDisabled\",\"resetMapClicked\",\"Validate\",\"_ref9\",\"validateMove\",\"validateMoveClicked\",\"validationFinished\",\"validateDisabled\",\"tempProponentWinCount\",\"tempOpponentWinCount\",\"result\",\"win\",\"message\",\"node\",\"edgePresent\",\"i\",\"edge\",\"addEdges\",\"Hint\",\"_ref10\",\"hintDisabled\",\"LoginScreen\",\"props\",\"_this\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"temp\",\"JSON\",\"stringify\",\"parse\",\"setState\",\"showDimmer\",\"gameTypeDisabled\",\"getGameMap\",\"_this$state\",\"gameStartDisabled\",\"getGameList\",\"resultMessage\",\"resultDisabled\",\"status\",\"messageColor\",\"exceptionMessage\",\"isGameStartChecked\",\"handleChange\",\"e\",\"_ref11\",\"defineProperty\",\"handleChangeCheckBox\",\"_ref12\",\"checked\",\"showResult\",\"hintMove\",\"email\",\"password\",\"loading\",\"showErr\",\"React\",\"createRef\",\"getInitialMap\",\"nextProps\",\"_this2\",\"tempMessage\",\"setTimeout\",\"_this3\",\"_this$state2\",\"Dimmer\",\"active\",\"page\",\"Header\",\"as\",\"icon\",\"inverted\",\"class\",\"Input\",\"placeholder\",\"onChange\",\"width\",\"marginTop\",\"marginLeft\",\"login_screen_Save\",\"login_screen_ResetMap\",\"login_screen_Remove\",\"login_screen_PlayGame\",\"login_screen_Flow\",\"Dropdown\",\"options\",\"text\",\"selection\",\"Checkbox\",\"login_screen_PlayFlow\",\"login_screen_AddNodeGame\",\"login_screen_ResetGame\",\"login_screen_Hint\",\"login_screen_Validate\",\"Message\",\"color\",\"compact\",\"maxWidth\",\"minWidth\",\"onDismiss\",\"mapDispatchToProps\",\"dispatch\",\"get\",\"connect\",\"routes\",\"react_router_redux_es\",\"minHeight\",\"height\",\"Route\",\"exact\",\"path\",\"component\",\"provider\",\"es\",\"integration_react\",\"ReactDOM\",\"render\",\"document\",\"getElementById\",\"URL\",\"origin\",\"addEventListener\",\"fetch\",\"response\",\"headers\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"export const GAME_MAP_PENDING = 'GAME_MAP_PENDING';\\nexport const GAME_MAP_FULFILLED = 'GAME_MAP_FULFILLED';\\nexport const GAME_MAP_REJECTED = 'GAME_MAP_REJECTED';\\n\\nexport const GAME_LIST_PENDING = 'GAME_LIST_PENDING';\\nexport const GAME_LIST_FULFILLED = 'GAME_LIST_FULFILLED';\\nexport const GAME_LIST_REJECTED = 'GAME_LIST_REJECTED';\\n\\nexport const VALIDATE_MOVE_RESULT_PENDING = 'VALIDATE_MOVE_RESULT_PENDING';\\nexport const VALIDATE_MOVE_RESULT_FULFILLED = 'VALIDATE_MOVE_RESULT_FULFILLED';\\nexport const VALIDATE_MOVE_RESULT_REJECTED = 'VALIDATE_MOVE_RESULT_REJECTED';\\n\\nexport const INITIAL_MAP_PENDING = 'INITIAL_MAP_PENDING';\\nexport const INITIAL_MAP_FULFILLED = 'INITIAL_MAP_FULFILLED';\\nexport const INITIAL_MAP_REJECTED = 'INITIAL_MAP_REJECTED';\\n\\nexport const SAVE_MAP_PENDING = 'SAVE_MAP_PENDING';\\nexport const SAVE_MAP_FULFILLED = 'SAVE_MAP_FULFILLED';\\nexport const SAVE_MAP_REJECTED = 'SAVE_MAP_REJECTED';\\n\\nexport const HINT_MOVE_PENDING = 'HINT_MOVE_PENDING';\\nexport const HINT_MOVE_FULFILLED = 'HINT_MOVE_FULFILLED';\\nexport const HINT_MOVE_REJECTED = 'HINT_MOVE_REJECTED';\\n\",\"import { combineReducers } from 'redux';\\nimport {\\n\\tGAME_MAP_PENDING,\\n\\tGAME_MAP_FULFILLED,\\n\\tGAME_MAP_REJECTED,\\n\\tGAME_LIST_PENDING,\\n\\tGAME_LIST_FULFILLED,\\n\\tGAME_LIST_REJECTED,\\n\\tVALIDATE_MOVE_RESULT_PENDING,\\n\\tVALIDATE_MOVE_RESULT_FULFILLED,\\n\\tVALIDATE_MOVE_RESULT_REJECTED,\\n\\tINITIAL_MAP_PENDING,\\n\\tINITIAL_MAP_FULFILLED,\\n\\tINITIAL_MAP_REJECTED,\\n\\tSAVE_MAP_PENDING,\\n\\tSAVE_MAP_FULFILLED,\\n\\tSAVE_MAP_REJECTED,\\n\\tHINT_MOVE_PENDING,\\n\\tHINT_MOVE_FULFILLED,\\n\\tHINT_MOVE_REJECTED\\n} from '../actions/ActionTypes';\\n\\nconst initialMetaState = {\\n\\tGAME_MAP_STATUS: 'DEFAULT',\\n\\tGAME_LIST_STATUS: 'DEFAULT',\\n\\tLOGOUT_STATUS: 'DEFAULT',\\n\\tVALIDATE_MOVE_RESULT_STATUS:'DEFAULT',\\n\\tINITIAL_MAP_STATUS:'DEFAULT',\\n\\tSAVE_MAP_STATUS:'DEFAULT',\\n\\tHINT_MOVE_STATUS:'DEFAULT'\\n}\\n\\nconst initialDataState = {\\n\\tsessionId: '',\\n\\tname: '',\\n\\tgameTreeMap:[],\\n\\tgameTreeList:[],\\n\\tvalidateMoveResult:[],\\n\\tinitialMap:[],\\n\\tsaveMapResult:'',\\n\\thintMessage:''\\n}\\n\\nfunction metaReducer(state=initialMetaState, action){\\n\\t// listen to only the action interested for this reducer\\n\\tswitch(action.type){\\n\\t\\tcase GAME_MAP_PENDING: \\n\\t\\t\\treturn {...state, GAME_MAP_STATUS: 'PENDING'}\\n\\t\\tcase GAME_MAP_FULFILLED:\\n\\t\\t\\treturn {...state, GAME_MAP_STATUS: 'SUCCESS'}\\n\\t\\tcase GAME_MAP_REJECTED:\\n\\t\\t\\treturn {...state, GAME_MAP_STATUS: 'FAILED'}\\n\\t\\tcase VALIDATE_MOVE_RESULT_PENDING: \\n\\t\\t\\treturn {...state, VALIDATE_MOVE_RESULT_STATUS: 'PENDING'}\\n\\t\\tcase VALIDATE_MOVE_RESULT_FULFILLED:\\n\\t\\t\\treturn {...state, VALIDATE_MOVE_RESULT_STATUS: 'SUCCESS'}\\n\\t\\tcase VALIDATE_MOVE_RESULT_REJECTED:\\n\\t\\t\\treturn {...state, VALIDATE_MOVE_RESULT_STATUS: 'FAILED'}\\n\\t\\tcase GAME_LIST_PENDING: \\n\\t\\t\\treturn {...state, GAME_LIST_STATUS: 'PENDING'}\\n\\t\\tcase GAME_LIST_FULFILLED:\\n\\t\\t\\treturn {...state, GAME_LIST_STATUS: 'SUCCESS'}\\n\\t\\tcase GAME_LIST_REJECTED:\\n\\t\\t\\treturn {...state, GAME_LIST_STATUS: 'FAILED'}\\n\\t\\tcase INITIAL_MAP_PENDING: \\n\\t\\t\\treturn {...state, INITIAL_MAP_STATUS: 'PENDING'}\\n\\t\\tcase INITIAL_MAP_FULFILLED:\\n\\t\\t\\treturn {...state, INITIAL_MAP_STATUS: 'SUCCESS'}\\n\\t\\tcase INITIAL_MAP_REJECTED:\\n\\t\\t\\treturn {...state, INITIAL_MAP_STATUS: 'FAILED'}\\n\\t\\tcase SAVE_MAP_PENDING: \\n\\t\\t\\treturn {...state, SAVE_MAP_STATUS: 'PENDING'}\\n\\t\\tcase SAVE_MAP_FULFILLED:\\n\\t\\t\\treturn {...state, SAVE_MAP_STATUS: 'SUCCESS'}\\n\\t\\tcase SAVE_MAP_REJECTED:\\n\\t\\t\\treturn {...state, SAVE_MAP_STATUS: 'FAILED'}\\t\\t\\t\\n\\t\\tcase HINT_MOVE_PENDING: \\n\\t\\t\\treturn {...state, HINT_MOVE_STATUS: 'PENDING'}\\n\\t\\tcase HINT_MOVE_FULFILLED:\\n\\t\\t\\treturn {...state, HINT_MOVE_STATUS: 'SUCCESS'}\\n\\t\\tcase HINT_MOVE_REJECTED:\\n\\t\\t\\treturn {...state, HINT_MOVE_STATUS: 'FAILED'}\\t\\n\\t\\tdefault:\\n\\t\\t\\treturn state;\\t\\n\\t}\\n}\\n\\nfunction dataReducer(state=initialDataState, action){\\n\\t// listen to only the action interested for this reducer\\n\\tswitch(action.type){\\n\\t\\tcase GAME_MAP_FULFILLED:\\n\\t\\t{ console.log('GAME_MAP_FULFILLED',action.payload.data);\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t...state, \\n\\t\\t\\t\\tgameTreeMap:action.payload.data\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tcase GAME_LIST_FULFILLED:\\n\\t\\t\\t{ console.log('GAME_LIST_FULFILLED',action.payload.data);\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...state, \\n\\t\\t\\t\\t\\tgameTreeList:action.payload.data\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\tcase VALIDATE_MOVE_RESULT_FULFILLED:\\n\\t\\t\\t{ console.log('VALIDATE_MOVE_RESULT_FULFILLED',action.payload.data);\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...state, \\n\\t\\t\\t\\t\\tvalidateMoveResult:action.payload.data\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\tcase INITIAL_MAP_FULFILLED:\\n\\t\\t\\t{ console.log('INITIAL_MAP_FULFILLED',action.payload.data);\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...state, \\n\\t\\t\\t\\t\\tinitialMap:action.payload.data\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\t\\t\\n\\t\\tcase SAVE_MAP_FULFILLED:\\n\\t\\t\\t{ console.log('SAVE_MAP_FULFILLED',action.payload.data);\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...state, \\n\\t\\t\\t\\t\\tsaveMapResult:action.payload.data\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\tcase HINT_MOVE_FULFILLED:\\n\\t\\t\\t{ console.log('HINT_MOVE_FULFILLED',action.payload.data);\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t...state, \\n\\t\\t\\t\\t\\thintMessage:action.payload.data\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\t\\n\\t\\tdefault:\\n\\t\\t\\treturn state;\\t\\n\\t}\\n}\\n\\nexport default combineReducers({\\n  meta: metaReducer,\\n  data: dataReducer\\n});\",\"import { combineReducers } from 'redux';\\nimport { routerReducer } from 'react-router-redux';\\nimport userReducer from './user';\\n\\n\\nexport default combineReducers({\\n  router: routerReducer,\\n  user: userReducer,\\n});\\n\",\"import { createStore, applyMiddleware, compose } from 'redux';\\nimport { routerMiddleware } from 'react-router-redux';\\nimport thunk from 'redux-thunk';\\nimport createHistory from 'history/createHashHistory';\\nimport rootReducer from '../reducers';\\nimport promiseMiddleware from 'redux-promise-middleware'\\n\\nimport { persistStore, persistReducer } from 'redux-persist'\\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\\n\\nconst initialState = {};\\nconst enhancers = [];\\nexport const history = createHistory({basename: '/uccs-report'});\\nconst middleware = [thunk, promiseMiddleware(), routerMiddleware(history)];\\n\\nif (process.env.NODE_ENV === 'development') {\\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\\n\\n  if (typeof devToolsExtension === 'function') {\\n    enhancers.push(devToolsExtension());\\n  }\\n}\\n\\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\\n\\n//export const store = createStore(rootReducer, initialState, composedEnhancers);\\n\\nconst persistConfig = {\\n  key: 'root',\\n  storage,\\n}\\n\\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\\nexport const store = createStore(persistedReducer, initialState, composedEnhancers);\\nexport const persistor = persistStore(store);\\n\",\"export default [\\r\\n    \\r\\n  ];\\r\\n  \",\"export default [];\",\"import axios from 'axios';\\nconst GAME_MAP_URL = `${process.env.REACT_APP_API_BASE}/getGameMap`;\\nconst GAME_LIST_URL = `${process.env.REACT_APP_API_BASE}/getGameList`;\\nconst VALIDATE_URL = `${process.env.REACT_APP_API_BASE}/validate`;\\nconst INITIAL_MAP_URL = `${process.env.REACT_APP_API_BASE}/getInitialMap`;\\nconst SAVE_MAP_URL = `${process.env.REACT_APP_API_BASE}/saveMap`;\\nconst HINT_MOVE_URL = `${process.env.REACT_APP_API_BASE}/hintMove`;\\n// const LOGOUT_API_URL = (sessionId) => `${process.env.REACT_APP_API_BASE}/user/logout?sessionId=${sessionId}`;\\n\\n// actions\\nvar getMap = (nodes,edges) => {\\n\\treturn axios.post(GAME_MAP_URL, {nodes,edges});\\n}\\n\\nvar getList = (gameType,initialNode,gameTreeMap,gameStart) => {\\n\\treturn axios.post(GAME_LIST_URL, {gameType,initialNode,gameTreeMap,gameStart});\\n}\\n\\nvar validate = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\\n\\treturn axios.post(VALIDATE_URL, {initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart});\\n}\\n\\nvar getInitial = () => {\\n\\treturn axios.get(INITIAL_MAP_URL);\\n}\\n\\nvar save = (nodes,edges) => {\\n\\treturn axios.post(SAVE_MAP_URL, {nodes,edges});\\n}\\n\\nvar hint = (initialNode,gameTreeList,nodes, edges,gameStart) => {\\n\\treturn axios.post(HINT_MOVE_URL, {initialNode,gameTreeList,nodes, edges,gameStart});\\n}\\n\\nexport const getGameMap = (nodes,edges) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'GAME_MAP',\\n\\t\\t\\tpayload: getMap(nodes,edges)\\n\\t\\t})\\n\\n\\t}\\n}\\n\\nexport const getGameList = (gameType,initialNode,gameTreeMap,gameStart) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'GAME_LIST',\\n\\t\\t\\tpayload: getList(gameType,initialNode,gameTreeMap,gameStart)\\n\\t\\t})\\n\\n\\t}\\n}\\n\\nexport const validateMove = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'VALIDATE_MOVE_RESULT',\\n\\t\\t\\tpayload: validate(initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart)\\n\\t\\t})\\n\\n\\t}\\n}\\n\\nexport const getInitialMap = () => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'INITIAL_MAP',\\n\\t\\t\\tpayload: getInitial()\\n\\t\\t})\\n\\n\\t}\\n}\\n\\nexport const saveMap = (nodes,edges) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'SAVE_MAP',\\n\\t\\t\\tpayload: save(nodes,edges)\\n\\t\\t})\\n\\n\\t}\\n}\\n\\nexport const hintMove = (initialNode,gameTreeList,nodes, edges,gameStart) => {\\n\\treturn dispatch => {\\n\\t\\tdispatch({\\n\\t\\t\\ttype: 'HINT_MOVE',\\n\\t\\t\\tpayload: hint(initialNode,gameTreeList,nodes, edges, gameStart)\\n\\t\\t})\\n\\n\\t}\\n}\\n\\n\\n\",\"import React, {useState, Fragment, Component} from 'react';\\nimport { Input,Dropdown,Message,Dimmer, Header, Icon,Checkbox  } from \\\"semantic-ui-react\\\";\\nimport { useCallback } from 'react';\\nimport ReactFlow, { ReactFlowProvider, useReactFlow } from 'react-flow-renderer';\\n\\n// import defaultNodes from './nodes.js';\\nimport defaultGameNodes from './gameNode.js';\\n// import defaultEdges from './edges.js';\\nimport defaultGameEdges from './gameEdge.js';\\nimport './button.css';\\n\\n\\n//redux\\nimport { connect } from 'react-redux';\\nimport { getGameMap,getGameList,validateMove,getInitialMap,saveMap,hintMove } from '../actions/UserActions';\\nimport ErrorMessage from \\\"../components/show-error\\\";\\n\\n\\nconst edgeOptions = {\\n  animated: false,\\n  style: {\\n    stroke: 'black',\\n  },\\n};\\n\\nconst connectionLineStyle = { stroke: 'black' };\\nlet nodeId = 0;\\n\\nconst Flow = ({defaultNodes,defaultEdges,addMapNodeDisabled}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = useCallback(() => {\\n    var count = reactFlowInstance.getNodes().length;\\n    const id = `${++count}`;\\n    const newNode = {\\n      id,\\n      position: {\\n        // x: Math.random() * 500,\\n        // y: 0.25 * 500,\\n        x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\\n        y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\\n      },\\n      data: {\\n        label: `Node ${id}`,\\n      },\\n    };\\n    reactFlowInstance.addNodes(newNode);\\n    \\n  }, []);\\n\\n  return (\\n    <React.Fragment>\\n      <button onClick={onClick} className=\\\"btn-add\\\" disabled={addMapNodeDisabled}>\\n       Add Node\\n     </button>\\n    <ReactFlow\\n      defaultNodes={defaultNodes}\\n      defaultEdges={defaultEdges}\\n      defaultEdgeOptions={edgeOptions}\\n      fitView\\n      style={{\\n        backgroundColor: '#D3D2E5',\\n      }}\\n      connectionLineStyle={connectionLineStyle}\\n    />\\n      </React.Fragment>\\n  );\\n}\\n\\nconst Save = ({saveMap,saveDisabled}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = useCallback(() => {\\n    saveMap(reactFlowInstance.getNodes(),reactFlowInstance.getEdges());\\n  }, []);\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick} className=\\\"btn-add2\\\" disabled={saveDisabled}>\\n       <Icon name='save'/>Save\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst ResetMap = ({defaultNodes, defaultEdges,resetMapDisabled,resetMap}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = useCallback(() => {\\n    reactFlowInstance.setNodes(defaultNodes);\\n    reactFlowInstance.setEdges(defaultEdges)\\n    nodeId = 0;\\n    resetMap();\\n  }, []);\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick} className=\\\"btn-add4\\\" disabled={resetMapDisabled}>\\n       <Icon name='undo' size='small'/>Reset\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst Remove = ({removeNode,removeDisabled}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = removeNode => () => {\\n    console.log(typeof(removeNode),'removeNode',removeNode)\\n    var tempNodes = reactFlowInstance.getNodes().filter((x) => {\\n\\t\\t\\treturn x.id !== removeNode\\n\\t\\t});\\n    var tempEdges = reactFlowInstance.getEdges().filter((x) => {\\n\\t\\t\\treturn (x.source !== removeNode && x.target !== removeNode)\\n\\t\\t});\\n    reactFlowInstance.setNodes(tempNodes);\\n    reactFlowInstance.setEdges(tempEdges);\\n    // nodeId = 2;\\n  };\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick(removeNode)} className=\\\"btn-add8\\\" disabled={removeDisabled}>\\n     <Icon name='trash' size='small'/>Remove\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst PlayGame = ({playGameFunction,playGameDisabled}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = useCallback(() => {\\n    playGameFunction(reactFlowInstance.getNodes(),reactFlowInstance.getEdges());\\n    // console.log('getNodes',JSON.stringify(reactFlowInstance.getNodes()),'getEdges',JSON.stringify(reactFlowInstance.getEdges()))\\n  }, []);\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick} className=\\\"btn-add3\\\" disabled={playGameDisabled}>\\n     <Icon name='play'/>Game\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst PlayFlow = ({}) => {\\n  const reactFlowInstance = useReactFlow();\\n  return (\\n    <React.Fragment>\\n      {/* <button onClick={onClick(value)} className=\\\"btn-add5\\\">\\n       Add\\n     </button> */}\\n    <ReactFlow\\n       defaultNodes={defaultGameNodes}\\n       defaultEdges={defaultGameEdges}\\n      defaultEdgeOptions={edgeOptions}\\n      fitView\\n      style={{\\n        backgroundColor: '#f4b1b1',\\n      }}\\n      connectionLineStyle={connectionLineStyle}\\n    />\\n      </React.Fragment>\\n  );\\n}\\n\\nconst AddNodeGame = ({value,addbutton,addGameNodeDisabled}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = value => () => {\\n    var tempNodes = reactFlowInstance.getNodes().filter((x) => {\\n      return (x.id).split('(')[0] == value\\n\\t\\t});\\n    var id = value ;\\n    if(tempNodes.length != 0){\\n      id = value + '('+ (tempNodes.length+1) + ')'\\n    }\\n    \\n    console.log('typeof',typeof(id),'id', id)\\n    const gameNode = {\\n      id,\\n      position: {\\n        // x: Math.random() * 500,\\n        // y: 0.25 * 500,\\n        x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\\n        y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\\n      },\\n      data: {\\n        label: `Node ${id}`\\n      },\\n    };\\n    console.log('gameNode', gameNode);\\n    reactFlowInstance.addNodes(gameNode);\\n    console.log(reactFlowInstance.getEdges());\\n    addbutton(gameNode);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick(value)} className=\\\"btn-add5\\\" disabled={addGameNodeDisabled}>\\n      <Icon name='add'/>\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst ResetGame = ({resetGame,resetGameDisabled,resetMapClicked}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = useCallback(() => {\\n    reactFlowInstance.setNodes(defaultGameNodes);\\n    reactFlowInstance.setEdges(defaultGameEdges);\\n    resetGame();\\n  }, []);\\n  if(resetMapClicked){\\n    reactFlowInstance.setNodes(defaultGameNodes);\\n    reactFlowInstance.setEdges(defaultGameEdges);\\n    resetGame();\\n  }\\n  return (\\n    <React.Fragment>  \\n     <button onClick={onClick} className=\\\"btn-add6\\\" disabled={resetGameDisabled}>\\n      <Icon name='undo'/>\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst Validate = ({initialNode,gameTreeList,validateMove,validateMoveClicked,validateMoveResult, \\n  validationFinished, proponentWinCount, opponentWinCount,lastAddedNode,validateDisabled,gameStart}) => {\\n  const reactFlowInstance = useReactFlow();\\n  var tempProponentWinCount = -1, tempOpponentWinCount = -1;\\n  // console.log('initialNode',initialNode,'gameTreeList',gameTreeList,'validateMove',validateMove);\\n  const onClick = (initialNode,gameTreeList,validateMove,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => () => {\\n    console.log('2',initialNode,gameTreeList)\\n    // alert('Invalid Move');\\n    // reactFlowInstance.addNodes({id: '2',data: { label: 'Node 2' }, position: { x: 250, y: 25 }});\\n    // reactFlowInstance.addEdges({id: 'e1-2', source: '1', target: '2'});\\n    validateMove(initialNode,gameTreeList,reactFlowInstance.getNodes(),reactFlowInstance.getEdges(),lastAddedNode.id, \\n    proponentWinCount, opponentWinCount,gameStart);\\n    \\n  };\\n  console.log('validateMoveClicked',validateMoveClicked);\\n  console.log('validateMoveResult',validateMoveResult);\\n  if(validateMoveClicked){\\n    console.log('validateMoveResult',validateMoveResult)\\n    if(validateMoveResult.result){\\n      \\n    if(validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over'){\\n      if(validateMoveResult.message != null){\\n          tempProponentWinCount = validateMoveResult.proponentWinCount;\\n          tempOpponentWinCount = validateMoveResult.opponentWinCount;\\n          // alert(validateMoveResult.message)\\n      }\\n    }else if(validateMoveResult.win == 'Won'){\\n\\n      const id = validateMoveResult.node.id;\\n      const gameNode = {\\n        id,\\n        position: {\\n          // x: Math.random() * 500,\\n          // y: 0.25 * 500,\\n          x: Math.floor(Math.random() * (500 - 300 + 1) ) + 300,\\n          y:  Math.floor(Math.random() * (250 - 150 + 1) ) + 150,\\n        },\\n        data: {\\n          label: `Node ${id}`,\\n        }\\n      }\\n      reactFlowInstance.addNodes(gameNode);\\n      var edgePresent = false;\\n      var tempEdges = reactFlowInstance.getEdges();\\n      for (let i = 0; i < reactFlowInstance.getEdges().length; i++) {\\n        if(validateMoveResult.edge.source == tempEdges[i].source && validateMoveResult.edge.target == tempEdges[i].target){\\n          edgePresent=true;\\n        }\\n      }\\n      if(!edgePresent){\\n        reactFlowInstance.addEdges(validateMoveResult.edge);\\n        }\\n      if(validateMoveResult.message != null){\\n        tempProponentWinCount = validateMoveResult.proponentWinCount;\\n        tempOpponentWinCount = validateMoveResult.opponentWinCount;\\n        // alert(validateMoveResult.message)\\n        }\\n      }\\n    }else{\\n      var tempNodes = reactFlowInstance.getNodes().filter((x) => {\\n        return x.id !== lastAddedNode.id\\n      });\\n      var tempEdges = reactFlowInstance.getEdges().filter((x) => {\\n        return (x.source !== lastAddedNode.id && x.target !== lastAddedNode.id)\\n      });\\n      reactFlowInstance.setNodes(tempNodes);\\n      reactFlowInstance.setEdges(tempEdges);\\n      // alert(validateMoveResult.exceptionMessage)\\n    }\\n    validationFinished(tempProponentWinCount,tempOpponentWinCount,validateMoveResult);\\n  }\\n\\n  return (\\n    <React.Fragment>\\n     <button onClick={onClick(initialNode,gameTreeList,validateMove,lastAddedNode,proponentWinCount,opponentWinCount,gameStart)} className=\\\"btn-add7\\\" disabled={validateDisabled}>\\n     <Icon name='check circle outline' />Validate\\n     </button>\\n      </React.Fragment>\\n  );\\n}\\n\\nconst Hint = ({hint,initialNode,gameTreeList,hintDisabled,gameStart}) => {\\n  const reactFlowInstance = useReactFlow();\\n  const onClick = (hint,initialNode,gameTreeList,gameStart) => () => {\\n    console.log('hint initialNode', initialNode)\\n    hint(initialNode,gameTreeList,reactFlowInstance.getNodes(), reactFlowInstance.getEdges(),gameStart);\\n  };\\n\\n  return (\\n    <React.Fragment>  \\n     <button onClick={onClick(hint,initialNode,gameTreeList,gameStart)} className=\\\"btn-add10\\\" disabled={hintDisabled}>\\n      <Icon name='idea'/>Hint\\n     </button>\\n    </React.Fragment>\\n  );\\n}\\n\\nclass LoginScreen extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      email: '',\\n      password: '',\\n      loading: false,\\n      reactFlowInstance : '',\\n      initialNode:'',\\n      removeNode:'',\\n      gameType:'',\\n      gameNode:'',\\n      gameTreeMap:[],\\n      gameTreeList:[],\\n      validateMoveResult:[],\\n      validateMoveClicked:false,\\n      proponentWinCount:0,\\n      opponentWinCount:0,\\n      lastAddedNode:'',\\n      defaultNodes:[],\\n      defaultEdges:[],\\n      resultMessage:null,\\n      hintMessage:'',\\n      addMapNodeDisabled:false,\\n      removeDisabled:false,\\n      saveDisabled:false,\\n      resetMapDisabled:false,\\n      playGameDisabled:false,\\n      gameTypeDisabled:true,\\n      addGameNodeDisabled:true,\\n      validateDisabled:true,\\n      resetGameDisabled:true,\\n      hintDisabled:true,\\n      resultDisabled:true,\\n      resetMapClicked:false,\\n      gameStartDisabled:true,\\n      status:'Hide',\\n      message:'',\\n      showDimmer:false,\\n      messageColor:'blue',\\n      gameStart:'Proponent',\\n      isGameStartChecked:false\\n    }\\n    this.showErr = React.createRef(); \\n  }\\n\\n  componentDidMount(){\\n    this.setState({showDimmer:true});\\n    this.props.getInitialMap()\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n    if (this.props.GAME_MAP_STATUS !== 'SUCCESS' && nextProps.GAME_MAP_STATUS === 'SUCCESS') {\\n      this.setState({ gameTreeMap: nextProps.gameTreeMap,showDimmer:false,\\n                      status:'Show', messageColor:'teal', message:'Let\\\\'s play Argument Game !! ALL THE BEST :-)' });\\n      console.log('nextProps.gameTreeMap',nextProps.gameTreeMap);\\n    } else if (this.props.GAME_MAP_STATUS !== 'FAILED' && nextProps.GAME_MAP_STATUS === 'FAILED') {\\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage, showDimmer:false});\\n    }\\n\\n    if (this.props.GAME_LIST_STATUS !== 'SUCCESS' && nextProps.GAME_LIST_STATUS === 'SUCCESS') {\\n      this.setState({ gameTreeList: nextProps.gameTreeList });\\n      setTimeout(() => this.setState({showDimmer:false}), 100);\\n      console.log('nextProps.gameTreeList',nextProps.gameTreeList);\\n    } else if (this.props.GAME_LIST_STATUS !== 'FAILED' && nextProps.GAME_LIST_STATUS === 'FAILED') {\\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\\n    }\\n\\n    if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'SUCCESS' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'SUCCESS') {\\n      this.setState({ validateMoveResult: nextProps.validateMoveResult, proponentWinCount: nextProps.proponentWinCount, \\n              opponentWinCount: nextProps.opponentWinCount},() => {this.setState({validateMoveClicked: true})});\\n      setTimeout(() => this.setState({showDimmer:false}), 100);\\n      console.log('nextProps.validateMoveResult',nextProps.validateMoveResult);\\n    } else if (this.props.VALIDATE_MOVE_RESULT_STATUS !== 'FAILED' && nextProps.VALIDATE_MOVE_RESULT_STATUS === 'FAILED') {\\n      this.setState({ validateMoveResult: nextProps.validateMoveResult}, () => {this.setState({validateMoveClicked: true})});\\n      setTimeout(() => this.setState({showDimmer:false}), 100);\\n    }\\n\\n    if (this.props.INITIAL_MAP_STATUS !== 'SUCCESS' && nextProps.INITIAL_MAP_STATUS === 'SUCCESS') {\\n      this.setState({ showDimmer:false, defaultNodes: JSON.parse(nextProps.initialMap.nodes), defaultEdges: JSON.parse(nextProps.initialMap.edges)});\\n    } else if (this.props.INITIAL_MAP_STATUS !== 'FAILED' && nextProps.INITIAL_MAP_STATUS === 'FAILED') {\\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\\n    }\\n\\n    if (this.props.SAVE_MAP_STATUS !== 'SUCCESS' && nextProps.SAVE_MAP_STATUS === 'SUCCESS') {\\n      var tempMessage = 'Saved Succesfully !';\\n      this.setState({ status:'Show', messageColor:'blue', message:tempMessage,showDimmer:false});\\n    } else if (this.props.SAVE_MAP_STATUS !== 'FAILED' && nextProps.SAVE_MAP_STATUS === 'FAILED') {\\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage,showDimmer:false});\\n    }\\n\\n    if (this.props.HINT_MOVE_STATUS !== 'SUCCESS' && nextProps.HINT_MOVE_STATUS === 'SUCCESS') {\\n      this.setState({ status:'Show', messageColor:'blue', message:nextProps.hintMessage,hintMessage: nextProps.hintMessage});\\n      setTimeout(() => this.setState({showDimmer:false}), 100);\\n    } else if (this.props.HINT_MOVE_STATUS !== 'FAILED' && nextProps.HINT_MOVE_STATUS === 'FAILED') {\\n      var tempMessage = 'Unable to connect to Server!! Kindly try again after some time.';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage});\\n      setTimeout(() => this.setState({showDimmer:false}), 100);\\n    }\\n\\n  }\\n\\n  saveMap = (nodes,edges) => {\\n    // const { email, password } = this.state;\\n    // this.setState({ loading: true });\\n    // const reactFlowInstance = useReactFlow();\\n    var temp = JSON.stringify(nodes);\\n    console.log('nodes',JSON.stringify(nodes), 'edges', JSON.stringify(edges), 'nodesParse', JSON.parse(temp));\\n    // this.setState({reactFlowInstance:edges} , () => (\\\"this.state.reactFlowInstance\\\",console.log(this.state.reactFlowInstance)) );\\n    console.log('gameType',this.state.gameType);\\n    this.setState({showDimmer:true});\\n    this.props.saveMap(JSON.stringify(nodes), JSON.stringify(edges));\\n  }\\n\\n  playGameFunction = (nodes,edges) => {\\n    this.setState({initialNode:null,addMapNodeDisabled:true, removeDisabled:true, playGameDisabled:true, gameTypeDisabled:false,\\n       resetGameDisabled:false,removeNode:'',showDimmer:true});\\n    console.log('nodes',nodes,'edges',edges)\\n    this.props.getGameMap(nodes,edges);\\n  }\\n\\n  addbutton = (gameNode) => {\\n    let {initialNode,gameTreeMap,gameType,gameStart} = this.state;\\n    if(initialNode == null){\\n      if(gameStart == 'Proponent'){\\n        this.setState({initialNode:gameNode.id, lastAddedNode:gameNode,validateDisabled:false,gameTypeDisabled:true,\\n          addGameNodeDisabled:true,hintDisabled:true,showDimmer:true,gameStartDisabled:true})\\n      }else{\\n        this.setState({initialNode:gameNode.id, lastAddedNode:gameNode,validateDisabled:true,gameTypeDisabled:true,\\n          addGameNodeDisabled:false,hintDisabled:false,showDimmer:true,gameStartDisabled:true})\\n      }\\n      \\n      this.props.getGameList(gameType,gameNode.id,gameTreeMap,gameStart);\\n      console.log('initialNode',initialNode)\\n    }else{\\n      this.setState({lastAddedNode:gameNode,validateDisabled:false,addGameNodeDisabled:true,\\n                     hintDisabled:true})\\n    }\\n  }\\n\\n  validateMove = (initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart) => {\\n    this.setState({showDimmer:true});\\n    this.props.validateMove(initialNode,gameTreeList,nodes,edges,lastAddedNode,proponentWinCount,opponentWinCount,gameStart);\\n    console.log('this.state.validateMoveClicked', this.state.validateMoveClicked)\\n  \\n  }\\n\\n  validationFinished = (tempProponentWinCount,tempOpponentWinCount,validateMoveResult) => {\\n    if(tempProponentWinCount !== -1 && tempOpponentWinCount !== -1){\\n      this.setState({validateMoveClicked:false, proponentWinCount:tempProponentWinCount, opponentWinCount:tempOpponentWinCount});\\n    }else{\\n      this.setState({validateMoveClicked:false});\\n    }\\n    if(validateMoveResult.message != null){\\n      this.setState({resultMessage:validateMoveResult.message});\\n      }\\n    this.setState({validateDisabled:true,hintDisabled:false,addGameNodeDisabled:false,resultDisabled:false});\\n    if(validateMoveResult.result){\\n      if(validateMoveResult.win == 'Game Won' || validateMoveResult.win == 'Game Over'){\\n        if(validateMoveResult.message != null){\\n          this.setState({ status:'Show', messageColor:'blue', message:validateMoveResult.message});\\n        }\\n      }else if(validateMoveResult.win == 'Won'){\\n        if(validateMoveResult.message != null){\\n          this.setState({ status:'Show', messageColor:'blue', message:validateMoveResult.message});\\n        }\\n      }\\n    }else{\\n      this.setState({ status:'Show', messageColor:'red', message:validateMoveResult.exceptionMessage});\\n    }\\n  }\\n\\n  resetGame = () => {\\n    if(this.state.resetMapClicked){\\n      this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:false,\\n        gameType:'', gameNode:'',gameTypeDisabled:true,addGameNodeDisabled:true,gameStart:'Proponent',isGameStartChecked:false,\\n        gameStartDisabled:true});\\n    }else{\\n      this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:false,\\n        gameType:'', gameNode:'',gameTypeDisabled:false,addGameNodeDisabled:true,gameStart:'Proponent',isGameStartChecked:false,\\n        gameStartDisabled:true });\\n    }\\n  }\\n\\n  resetMap = () => {\\n    this.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0, resultMessage:null, resetMapClicked:true,\\n        addMapNodeDisabled:false,removeDisabled:false,saveDisabled:false,resetMapDisabled:false,playGameDisabled:false,\\n        gameTypeDisabled:true,addGameNodeDisabled:true,validateDisabled:true,resetGameDisabled:true,hintDisabled:true,\\n        resultDisabled:true,gameType:'', gameNode:'',removeNode:'',gameStart:'Proponent',isGameStartChecked:false,\\n        gameStartDisabled:true });\\n  }\\n  \\n  handleChange = (e, { name, value, type }) => {\\n      console.log('name', name, 'value', value);\\n      this.setState({ [name]: value }, () => {console.log('this.state.initialNode',this.state.initialNode)});\\n      if(name == 'gameType'){\\n        this.setState({addGameNodeDisabled:false,gameStartDisabled:false});\\n      }\\n  }\\n\\n  handleChangeCheckBox = (e, { name, checked }) => {\\n\\t\\tif (name === 'gameStart') {\\n\\t\\t\\t// this.setState({ [name]: checked }, () => {console.log('checked',checked)});\\n      console.log('checked',checked)\\n      if(checked){\\n        this.setState({gameStart: 'Opponent',isGameStartChecked:checked});\\n      }else{\\n        this.setState({gameStart: 'Proponent',isGameStartChecked:checked});\\n      }\\n\\t\\t}\\n\\t}\\n\\n  showResult = () => {\\n    let {resultMessage} = this.state;\\n    if(resultMessage == null){\\n      var tempMessage = 'No winning statergy so far';\\n      this.setState({ status:'Show', messageColor:'red', message:tempMessage});\\n    }else{\\n      this.setState({ status:'Show', messageColor:'blue', message:resultMessage});\\n    }\\n  }  \\n\\n  hint = (initialNode,gameTreeList,nodes, edges,gameStart) => {\\n    console.log(initialNode,gameTreeList,nodes, edges)\\n    this.setState({showDimmer:true});\\n    this.props.hintMove(initialNode,gameTreeList,nodes, edges,gameStart)\\n  }\\n\\n  render() {\\n    let {initialNode,removeNode,gameType,gameNode,gameTreeList,defaultNodes,defaultEdges,resetMapClicked,gameStartDisabled,\\n         validateMoveClicked,validateMoveResult,proponentWinCount,opponentWinCount, lastAddedNode,showDimmer,gameStart,\\n         saveDisabled,resetMapDisabled,playGameDisabled,gameTypeDisabled,resultDisabled,removeDisabled,messageColor,isGameStartChecked,\\n         addGameNodeDisabled,validateDisabled,resetGameDisabled,hintDisabled,addMapNodeDisabled,status,message} = this.state;\\n    const options = [\\n      { key: 'Preferred', text: 'Preferred', value: 'Preferred' },\\n      { key: 'Grounded', text: 'Grounded', value: 'Grounded' }\\n    ]\\n    return (\\n    <React.Fragment>\\n\\n    <Dimmer active={showDimmer} page={true}>\\n        <Header as='h4' icon inverted>\\n            <Icon name='spinner' loading={true} />\\n              Please wait, we are processing your request..\\n\\t\\t    </Header>\\n    </Dimmer>  \\n\\n    <div class=\\\"split left\\\">\\n      <Input placeholder='Node' name='removeNode' value={removeNode} type='Number' \\n      onChange={this.handleChange} style={{ width:80,marginTop:-10, marginLeft:155}}/>\\n      <ReactFlowProvider>\\n        <Save saveMap={this.saveMap} saveDisabled={saveDisabled}/>\\n        <ResetMap defaultNodes={defaultNodes} defaultEdges={defaultEdges} resetMapDisabled={resetMapDisabled} resetMap={this.resetMap}/>\\n        <Remove removeNode={removeNode} removeDisabled={removeDisabled}/>\\n        <PlayGame playGameFunction={this.playGameFunction} playGameDisabled={playGameDisabled}/>\\n        <Flow defaultNodes={defaultNodes} defaultEdges={defaultEdges} addMapNodeDisabled={addMapNodeDisabled}/>\\n    </ReactFlowProvider>\\n     \\n    </div>\\n\\n    <div class=\\\"split right\\\">\\n    <Input placeholder='Node' name='gameNode' value={gameNode} type='Number' \\n      onChange={this.handleChange} style={{ width:80,marginTop:-10, marginLeft:205}}/>\\n    <Dropdown placeholder='Game Type' name='gameType' value={gameType} options={options} onChange={this.handleChange} \\n      selection style={{ width:60,marginTop:-10, marginLeft:-280}} disabled={gameTypeDisabled}/>\\n    <button onClick={this.showResult} className=\\\"btn-add9\\\" disabled={resultDisabled}>\\n       Result\\n    </button>\\n    <div class=\\\"checkboxComputer\\\">\\n      <Checkbox onClick={this.handleChangeCheckBox} name='gameStart' checked={isGameStartChecked} disabled={gameStartDisabled} />\\n      <label className=\\\"labelStyle\\\">Opponent Starts</label>\\n    </div>\\n    <ReactFlowProvider>\\n      <PlayFlow  /> \\n      <AddNodeGame value={gameNode} addbutton={this.addbutton} addGameNodeDisabled={addGameNodeDisabled}/>\\n      <ResetGame resetGame={this.resetGame} resetGameDisabled={resetGameDisabled} resetMapClicked={resetMapClicked}/>\\n      <Hint hint={this.hint} initialNode={initialNode} gameTreeList={gameTreeList} hintDisabled={hintDisabled} gameStart={gameStart}/>\\n      <Validate initialNode={initialNode} gameTreeList={gameTreeList} validateMove={this.validateMove} gameStart={gameStart}\\n        validateMoveClicked={validateMoveClicked} validateMoveResult={validateMoveResult} lastAddedNode={lastAddedNode}\\n        validationFinished={this.validationFinished} proponentWinCount={proponentWinCount} opponentWinCount={opponentWinCount}\\n        validateDisabled={validateDisabled}/>\\n    </ReactFlowProvider>\\n    </div>\\n\\n    <div>\\n      {\\n        (status === 'Show') &&\\n        <div class=\\\"messageDisplayed\\\"> \\n        <Message color={messageColor} size='big' compact style={{ maxWidth: 800,minWidth: 800 }}\\n\\t\\t\\t      onDismiss={() => this.setState({ status: 'Hide' })}>\\n\\t\\t\\t\\t      <Message.Header>{message}</Message.Header>\\n\\t\\t    </Message>\\n        </div>\\n      }\\n    </div>\\n    </React.Fragment>\\n    )\\n  }\\n}\\n\\n\\nconst mapStateToProps = (state) => {\\n  return {\\n    GAME_MAP_STATUS: state.user.meta.GAME_MAP_STATUS,\\n    GAME_LIST_STATUS: state.user.meta.GAME_LIST_STATUS,\\n    VALIDATE_MOVE_RESULT_STATUS: state.user.meta.VALIDATE_MOVE_RESULT_STATUS,\\n    INITIAL_MAP_STATUS: state.user.meta.INITIAL_MAP_STATUS,\\n    SAVE_MAP_STATUS: state.user.meta.SAVE_MAP_STATUS,\\n    HINT_MOVE_STATUS: state.user.meta.HINT_MOVE_STATUS,\\n    sessionId: state.user.data.sessionId,\\n    gameTreeMap: state.user.data.gameTreeMap,\\n    gameTreeList: state.user.data.gameTreeList,\\n    validateMoveResult: state.user.data.validateMoveResult,\\n    saveMapResult: state.user.data.saveMapResult,\\n    initialMap: state.user.data.initialMap,\\n    hintMessage: state.user.data.hintMessage\\n  }\\n}\\n\\nconst mapDispatchToProps = {\\n  getGameMap,\\n  getGameList,\\n  validateMove,\\n  getInitialMap,\\n  saveMap,\\n  hintMove\\n}\\n\\n//export default LoginScreen;\\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen)\",\"import React, {Component} from 'react';\\nimport { Modal, Button } from 'semantic-ui-react';\\n\\nclass ErrorMessage extends Component{\\n    constructor(props){\\n        super(props);\\n        this.state = {\\n            modalOpen: false\\n        }\\n    }\\n    open = (type, message) => this.setState({ \\n        modalOpen: true,\\n        errorType: type,\\n        errorMessage: message\\n    })\\n    close = () => this.setState({ modalOpen: false })\\n\\n    render(){\\n        const {modalOpen, errorType, errorMessage} = this.state;\\n        return (\\n            <Modal size='mini' open={modalOpen} onClose={this.close}>\\n              <Modal.Header>{errorType}</Modal.Header>\\n              <Modal.Content>\\n                <p>{errorMessage}</p>\\n              </Modal.Content>\\n              <Modal.Actions>\\n                <Button negative onClick={this.close}>OK</Button>\\n              </Modal.Actions>\\n            </Modal>\\n        )\\n    }\\n}\\n\\nexport default ErrorMessage;\",\"import React from \\\"react\\\";\\nimport { Route } from 'react-router-dom';\\nimport { ConnectedRouter as Router } from 'react-router-redux';\\nimport { history } from '../store';\\nimport LoginScreen from '../pages/login-screen';\\n\\n\\nconst routes = (\\n    <Router history={history}>\\n        <div style={{minHeight: 600, height: '100vh'}}>\\n            <Route exact path=\\\"/\\\" component={LoginScreen} />\\n        </div>\\n    </Router>\\n)\\n\\nexport default routes\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport { Provider } from 'react-redux';\\nimport registerServiceWorker from './registerServiceWorker';\\nimport { store, persistor } from './store';\\nimport routes from './components/routes';\\nimport \\\"semantic-ui-css/semantic.min.css\\\";\\nimport './index.css';\\n\\nimport { PersistGate } from 'redux-persist/integration/react'\\n\\nconst provider = (\\n\\t<Provider store={store}>\\n      \\t<PersistGate loading={null} persistor={persistor}>\\n\\t\\t\\t{routes}\\n\\t\\t</PersistGate>\\n\\t</Provider>\\n);\\n\\nReactDOM.render(provider, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{286:function(e,t,a){e.exports=a(478)},305:function(e,t,a){},477:function(e,t,a){},478:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),o=a(55),i=a.n(o),l=a(116),r=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function d(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}var c=a(25),m=a(69),u=a(234),S=a(236),g=a.n(S),p=a(18),E=\"GAME_MAP_PENDING\",T=\"GAME_MAP_FULFILLED\",A=\"GAME_MAP_REJECTED\",M=\"GAME_LIST_PENDING\",b=\"GAME_LIST_FULFILLED\",h=\"GAME_LIST_REJECTED\",v=\"VALIDATE_MOVE_RESULT_PENDING\",_=\"VALIDATE_MOVE_RESULT_FULFILLED\",D=\"VALIDATE_MOVE_RESULT_REJECTED\",f=\"INITIAL_MAP_PENDING\",N=\"INITIAL_MAP_FULFILLED\",L=\"INITIAL_MAP_REJECTED\",C=\"SAVE_MAP_PENDING\",I=\"SAVE_MAP_FULFILLED\",U=\"SAVE_MAP_REJECTED\",y=\"HINT_MOVE_PENDING\",O=\"HINT_MOVE_FULFILLED\",G=\"HINT_MOVE_REJECTED\",w={GAME_MAP_STATUS:\"DEFAULT\",GAME_LIST_STATUS:\"DEFAULT\",LOGOUT_STATUS:\"DEFAULT\",VALIDATE_MOVE_RESULT_STATUS:\"DEFAULT\",INITIAL_MAP_STATUS:\"DEFAULT\",SAVE_MAP_STATUS:\"DEFAULT\",HINT_MOVE_STATUS:\"DEFAULT\"},P={sessionId:\"\",name:\"\",gameTreeMap:[],gameTreeList:[],validateMoveResult:[],initialMap:[],saveMapResult:\"\",hintMessage:\"\"};var k=Object(c.c)({meta:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:w;switch((arguments.length>1?arguments[1]:void 0).type){case E:return Object(p.a)({},e,{GAME_MAP_STATUS:\"PENDING\"});case T:return Object(p.a)({},e,{GAME_MAP_STATUS:\"SUCCESS\"});case A:return Object(p.a)({},e,{GAME_MAP_STATUS:\"FAILED\"});case v:return Object(p.a)({},e,{VALIDATE_MOVE_RESULT_STATUS:\"PENDING\"});case _:return Object(p.a)({},e,{VALIDATE_MOVE_RESULT_STATUS:\"SUCCESS\"});case D:return Object(p.a)({},e,{VALIDATE_MOVE_RESULT_STATUS:\"FAILED\"});case M:return Object(p.a)({},e,{GAME_LIST_STATUS:\"PENDING\"});case b:return Object(p.a)({},e,{GAME_LIST_STATUS:\"SUCCESS\"});case h:return Object(p.a)({},e,{GAME_LIST_STATUS:\"FAILED\"});case f:return Object(p.a)({},e,{INITIAL_MAP_STATUS:\"PENDING\"});case N:return Object(p.a)({},e,{INITIAL_MAP_STATUS:\"SUCCESS\"});case L:return Object(p.a)({},e,{INITIAL_MAP_STATUS:\"FAILED\"});case C:return Object(p.a)({},e,{SAVE_MAP_STATUS:\"PENDING\"});case I:return Object(p.a)({},e,{SAVE_MAP_STATUS:\"SUCCESS\"});case U:return Object(p.a)({},e,{SAVE_MAP_STATUS:\"FAILED\"});case y:return Object(p.a)({},e,{HINT_MOVE_STATUS:\"PENDING\"});case O:return Object(p.a)({},e,{HINT_MOVE_STATUS:\"SUCCESS\"});case G:return Object(p.a)({},e,{HINT_MOVE_STATUS:\"FAILED\"});default:return e}},data:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:P,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case T:return console.log(\"GAME_MAP_FULFILLED\",t.payload.data),Object(p.a)({},e,{gameTreeMap:t.payload.data});case b:return console.log(\"GAME_LIST_FULFILLED\",t.payload.data),Object(p.a)({},e,{gameTreeList:t.payload.data});case _:return console.log(\"VALIDATE_MOVE_RESULT_FULFILLED\",t.payload.data),Object(p.a)({},e,{validateMoveResult:t.payload.data});case N:return console.log(\"INITIAL_MAP_FULFILLED\",t.payload.data),Object(p.a)({},e,{initialMap:t.payload.data});case I:return console.log(\"SAVE_MAP_FULFILLED\",t.payload.data),Object(p.a)({},e,{saveMapResult:t.payload.data});case O:return console.log(\"HINT_MOVE_FULFILLED\",t.payload.data),Object(p.a)({},e,{hintMessage:t.payload.data});default:return e}}}),F=Object(c.c)({router:m.c,user:k}),V=a(260),j=a(163),R=a(235),W=a.n(R),H=g()({basename:\"/uccs-report\"}),x=[u.a,Object(V.a)(),Object(m.b)(H)],J=c.d.apply(void 0,[c.a.apply(void 0,x)].concat([])),B={key:\"root\",storage:W.a},K=Object(j.a)(B,F),z=Object(c.e)(K,{},J),q=Object(j.b)(z),Q=a(495),$=a(46),X=a(104),Y=a(105),Z=a(117),ee=a(106),te=a(118),ae=a(237),ne=a(57),se=a(493),oe=a(494),ie=a(488),le=a(491),re=a(489),de=a(492),ce=a(33),me=a(81),ue=[],Se=[],ge=(a(305),a(58)),pe=a.n(ge),Ee=\"\".concat(\"http://192.168.1.92:8080\",\"/getGameMap\"),Te=\"\".concat(\"http://192.168.1.92:8080\",\"/getGameList\"),Ae=\"\".concat(\"http://192.168.1.92:8080\",\"/validate\"),Me=\"\".concat(\"http://192.168.1.92:8080\",\"/getInitialMap\"),be=\"\".concat(\"http://192.168.1.92:8080\",\"/saveMap\"),he=\"\".concat(\"http://192.168.1.92:8080\",\"/hintMove\"),ve=function(e,t){return pe.a.post(Ee,{nodes:e,edges:t})},_e=function(e,t,a,n){return pe.a.post(Te,{gameType:e,initialNode:t,gameTreeMap:a,gameStart:n})},De=function(e,t,a,n,s,o,i,l){return pe.a.post(Ae,{initialNode:e,gameTreeList:t,nodes:a,edges:n,lastAddedNode:s,proponentWinCount:o,opponentWinCount:i,gameStart:l})},fe=function(e,t){return pe.a.post(be,{nodes:e,edges:t})},Ne=function(e,t,a,n,s){return pe.a.post(he,{initialNode:e,gameTreeList:t,nodes:a,edges:n,gameStart:s})},Le=a(490),Ce=a(480),Ie=(n.Component,{animated:!1,style:{stroke:\"black\"}}),Ue={stroke:\"black\"},ye=function(e){var t=e.defaultNodes,a=e.defaultEdges,o=e.addMapNodeDisabled,i=Object(ce.c)(),l=Object(n.useCallback)(function(){var e=i.getNodes().length,t=\"\".concat(++e),a={id:t,position:{x:Math.floor(201*Math.random())+300,y:Math.floor(101*Math.random())+150},data:{label:\"Node \".concat(t)}};i.addNodes(a)},[]);return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:l,className:\"btn-add\",disabled:o},\"Add Node\"),s.a.createElement(me.b,{defaultNodes:t,defaultEdges:a,defaultEdgeOptions:Ie,fitView:!0,style:{backgroundColor:\"#D3D2E5\"},connectionLineStyle:Ue}))},Oe=function(e){var t=e.saveMap,a=e.saveDisabled,o=Object(ce.c)(),i=Object(n.useCallback)(function(){t(o.getNodes(),o.getEdges())},[]);return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:i,className:\"btn-add2\",disabled:a},s.a.createElement(ne.a,{name:\"save\"}),\"Save\"))},Ge=function(e){var t=e.defaultNodes,a=e.defaultEdges,o=e.resetMapDisabled,i=e.resetMap,l=Object(ce.c)(),r=Object(n.useCallback)(function(){l.setNodes(t),l.setEdges(a),0,i()},[]);return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:r,className:\"btn-add4\",disabled:o},s.a.createElement(ne.a,{name:\"undo\",size:\"small\"}),\"Reset\"))},we=function(e){var t=e.removeNode,a=e.removeDisabled,n=Object(ce.c)();return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:function(e){return function(){console.log(typeof e,\"removeNode\",e);var t=n.getNodes().filter(function(t){return t.id!==e}),a=n.getEdges().filter(function(t){return t.source!==e&&t.target!==e});n.setNodes(t),n.setEdges(a)}}(t),className:\"btn-add8\",disabled:a},s.a.createElement(ne.a,{name:\"trash\",size:\"small\"}),\"Remove\"))},Pe=function(e){var t=e.playGameFunction,a=e.playGameDisabled,o=Object(ce.c)(),i=Object(n.useCallback)(function(){t(o.getNodes(),o.getEdges())},[]);return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:i,className:\"btn-add3\",disabled:a},s.a.createElement(ne.a,{name:\"play\"}),\"Game\"))},ke=function(e){Object(ae.a)(e);Object(ce.c)();return s.a.createElement(s.a.Fragment,null,s.a.createElement(me.b,{defaultNodes:ue,defaultEdges:Se,defaultEdgeOptions:Ie,fitView:!0,style:{backgroundColor:\"#f4b1b1\"},connectionLineStyle:Ue}))},Fe=function(e){var t=e.value,a=e.addbutton,n=e.addGameNodeDisabled,o=Object(ce.c)();return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:function(e){return function(){var t=o.getNodes().filter(function(t){return t.id.split(\"(\")[0]==e}),n=e;0!=t.length&&(n=e+\"(\"+(t.length+1)+\")\"),console.log(\"typeof\",typeof n,\"id\",n);var s={id:n,position:{x:Math.floor(201*Math.random())+300,y:Math.floor(101*Math.random())+150},data:{label:\"Node \".concat(n)}};console.log(\"gameNode\",s),o.addNodes(s),console.log(o.getEdges()),a(s)}}(t),className:\"btn-add5\",disabled:n},s.a.createElement(ne.a,{name:\"add\"})))},Ve=function(e){var t=e.resetGame,a=e.resetGameDisabled,o=e.resetMapClicked,i=Object(ce.c)(),l=Object(n.useCallback)(function(){i.setNodes(ue),i.setEdges(Se),t()},[]);return o&&(i.setNodes(ue),i.setEdges(Se),t()),s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:l,className:\"btn-add6\",disabled:a},s.a.createElement(ne.a,{name:\"undo\"})))},je=function(e){var t=e.initialNode,a=e.gameTreeList,n=e.validateMove,o=e.validateMoveClicked,i=e.validateMoveResult,l=e.validationFinished,r=e.proponentWinCount,d=e.opponentWinCount,c=e.lastAddedNode,m=e.validateDisabled,u=e.gameStart,S=Object(ce.c)(),g=-1,p=-1;if(console.log(\"validateMoveClicked\",o),console.log(\"validateMoveResult\",i),o){if(console.log(\"validateMoveResult\",i),i.result){if(\"Game Won\"==i.win||\"Game Over\"==i.win)null!=i.message&&(g=i.proponentWinCount,p=i.opponentWinCount);else if(\"Won\"==i.win){var E=i.node.id,T={id:E,position:{x:Math.floor(201*Math.random())+300,y:Math.floor(101*Math.random())+150},data:{label:\"Node \".concat(E)}};S.addNodes(T);for(var A=!1,M=S.getEdges(),b=0;b<S.getEdges().length;b++)i.edge.source==M[b].source&&i.edge.target==M[b].target&&(A=!0);A||S.addEdges(i.edge),null!=i.message&&(g=i.proponentWinCount,p=i.opponentWinCount)}}else{var h=S.getNodes().filter(function(e){return e.id!==c.id});M=S.getEdges().filter(function(e){return e.source!==c.id&&e.target!==c.id});S.setNodes(h),S.setEdges(M)}l(g,p,i)}return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:function(e,t,a,n,s,o,i){return function(){console.log(\"2\",e,t),a(e,t,S.getNodes(),S.getEdges(),n.id,s,o,i)}}(t,a,n,c,r,d,u),className:\"btn-add7\",disabled:m},s.a.createElement(ne.a,{name:\"check circle outline\"}),\"Validate\"))},Re=function(e){var t=e.hint,a=e.initialNode,n=e.gameTreeList,o=e.hintDisabled,i=e.gameStart,l=Object(ce.c)();return s.a.createElement(s.a.Fragment,null,s.a.createElement(\"button\",{onClick:function(e,t,a,n){return function(){console.log(\"hint initialNode\",t),e(t,a,l.getNodes(),l.getEdges(),n)}}(t,a,n,i),className:\"btn-add10\",disabled:o},s.a.createElement(ne.a,{name:\"idea\"}),\"Hint\"))},We=function(e){function t(e){var a;return Object(X.a)(this,t),(a=Object(Z.a)(this,Object(ee.a)(t).call(this,e))).saveMap=function(e,t){var n=JSON.stringify(e);console.log(\"nodes\",JSON.stringify(e),\"edges\",JSON.stringify(t),\"nodesParse\",JSON.parse(n)),console.log(\"gameType\",a.state.gameType),a.setState({showDimmer:!0}),a.props.saveMap(JSON.stringify(e),JSON.stringify(t))},a.playGameFunction=function(e,t){a.setState({initialNode:null,addMapNodeDisabled:!0,removeDisabled:!0,playGameDisabled:!0,gameTypeDisabled:!1,resetGameDisabled:!1,removeNode:\"\",showDimmer:!0}),console.log(\"nodes\",e,\"edges\",t),a.props.getGameMap(e,t)},a.addbutton=function(e){var t=a.state,n=t.initialNode,s=t.gameTreeMap,o=t.gameType,i=t.gameStart;null==n?(\"Proponent\"==i?a.setState({initialNode:e.id,lastAddedNode:e,validateDisabled:!1,gameTypeDisabled:!0,addGameNodeDisabled:!0,hintDisabled:!0,showDimmer:!0,gameStartDisabled:!0}):a.setState({initialNode:e.id,lastAddedNode:e,validateDisabled:!0,gameTypeDisabled:!0,addGameNodeDisabled:!1,hintDisabled:!1,showDimmer:!0,gameStartDisabled:!0}),a.props.getGameList(o,e.id,s,i),console.log(\"initialNode\",n)):a.setState({lastAddedNode:e,validateDisabled:!1,addGameNodeDisabled:!0,hintDisabled:!0})},a.validateMove=function(e,t,n,s,o,i,l,r){a.setState({showDimmer:!0}),a.props.validateMove(e,t,n,s,o,i,l,r),console.log(\"this.state.validateMoveClicked\",a.state.validateMoveClicked)},a.validationFinished=function(e,t,n){-1!==e&&-1!==t?a.setState({validateMoveClicked:!1,proponentWinCount:e,opponentWinCount:t}):a.setState({validateMoveClicked:!1}),null!=n.message&&a.setState({resultMessage:n.message}),a.setState({validateDisabled:!0,hintDisabled:!1,addGameNodeDisabled:!1,resultDisabled:!1}),n.result?\"Game Won\"==n.win||\"Game Over\"==n.win?null!=n.message&&a.setState({status:\"Show\",messageColor:\"blue\",message:n.message}):\"Won\"==n.win&&null!=n.message&&a.setState({status:\"Show\",messageColor:\"blue\",message:n.message}):a.setState({status:\"Show\",messageColor:\"red\",message:n.exceptionMessage})},a.resetGame=function(){a.state.resetMapClicked?a.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0,resultMessage:null,resetMapClicked:!1,gameType:\"\",gameNode:\"\",gameTypeDisabled:!0,addGameNodeDisabled:!0,gameStart:\"Proponent\",isGameStartChecked:!1,gameStartDisabled:!0}):a.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0,resultMessage:null,resetMapClicked:!1,gameType:\"\",gameNode:\"\",gameTypeDisabled:!1,addGameNodeDisabled:!0,gameStart:\"Proponent\",isGameStartChecked:!1,gameStartDisabled:!0})},a.resetMap=function(){a.setState({initialNode:null,proponentWinCount:0,opponentWinCount:0,resultMessage:null,resetMapClicked:!0,addMapNodeDisabled:!1,removeDisabled:!1,saveDisabled:!1,resetMapDisabled:!1,playGameDisabled:!1,gameTypeDisabled:!0,addGameNodeDisabled:!0,validateDisabled:!0,resetGameDisabled:!0,hintDisabled:!0,resultDisabled:!0,gameType:\"\",gameNode:\"\",removeNode:\"\",gameStart:\"Proponent\",isGameStartChecked:!1,gameStartDisabled:!0})},a.handleChange=function(e,t){var n=t.name,s=t.value;t.type;console.log(\"name\",n,\"value\",s),a.setState(Object($.a)({},n,s),function(){console.log(\"this.state.initialNode\",a.state.initialNode)}),\"gameType\"==n&&a.setState({addGameNodeDisabled:!1,gameStartDisabled:!1})},a.handleChangeCheckBox=function(e,t){var n=t.name,s=t.checked;\"gameStart\"===n&&(console.log(\"checked\",s),s?a.setState({gameStart:\"Opponent\",isGameStartChecked:s}):a.setState({gameStart:\"Proponent\",isGameStartChecked:s}))},a.showResult=function(){var e=a.state.resultMessage;if(null==e){a.setState({status:\"Show\",messageColor:\"red\",message:\"No winning statergy so far\"})}else a.setState({status:\"Show\",messageColor:\"blue\",message:e})},a.hint=function(e,t,n,s,o){console.log(e,t,n,s),a.setState({showDimmer:!0}),a.props.hintMove(e,t,n,s,o)},a.state={email:\"\",password:\"\",loading:!1,reactFlowInstance:\"\",initialNode:\"\",removeNode:\"\",gameType:\"\",gameNode:\"\",gameTreeMap:[],gameTreeList:[],validateMoveResult:[],validateMoveClicked:!1,proponentWinCount:0,opponentWinCount:0,lastAddedNode:\"\",defaultNodes:[],defaultEdges:[],resultMessage:null,hintMessage:\"\",addMapNodeDisabled:!1,removeDisabled:!1,saveDisabled:!1,resetMapDisabled:!1,playGameDisabled:!1,gameTypeDisabled:!0,addGameNodeDisabled:!0,validateDisabled:!0,resetGameDisabled:!0,hintDisabled:!0,resultDisabled:!0,resetMapClicked:!1,gameStartDisabled:!0,status:\"Hide\",message:\"\",showDimmer:!1,messageColor:\"blue\",gameStart:\"Proponent\",isGameStartChecked:!1},a.showErr=s.a.createRef(),a}return Object(te.a)(t,e),Object(Y.a)(t,[{key:\"componentDidMount\",value:function(){this.setState({showDimmer:!0}),this.props.getInitialMap()}},{key:\"componentWillReceiveProps\",value:function(e){var t=this;if(\"SUCCESS\"!==this.props.GAME_MAP_STATUS&&\"SUCCESS\"===e.GAME_MAP_STATUS)this.setState({gameTreeMap:e.gameTreeMap,showDimmer:!1,status:\"Show\",messageColor:\"teal\",message:\"Let's play Argument Game !! ALL THE BEST :-)\"}),console.log(\"nextProps.gameTreeMap\",e.gameTreeMap);else if(\"FAILED\"!==this.props.GAME_MAP_STATUS&&\"FAILED\"===e.GAME_MAP_STATUS){var a=\"Unable to connect to Server!! Kindly try again after some time.\";this.setState({status:\"Show\",messageColor:\"red\",message:a,showDimmer:!1})}if(\"SUCCESS\"!==this.props.GAME_LIST_STATUS&&\"SUCCESS\"===e.GAME_LIST_STATUS)this.setState({gameTreeList:e.gameTreeList}),setTimeout(function(){return t.setState({showDimmer:!1})},100),console.log(\"nextProps.gameTreeList\",e.gameTreeList);else if(\"FAILED\"!==this.props.GAME_LIST_STATUS&&\"FAILED\"===e.GAME_LIST_STATUS){a=\"Unable to connect to Server!! Kindly try again after some time.\";this.setState({status:\"Show\",messageColor:\"red\",message:a,showDimmer:!1})}if(\"SUCCESS\"!==this.props.VALIDATE_MOVE_RESULT_STATUS&&\"SUCCESS\"===e.VALIDATE_MOVE_RESULT_STATUS?(this.setState({validateMoveResult:e.validateMoveResult,proponentWinCount:e.proponentWinCount,opponentWinCount:e.opponentWinCount},function(){t.setState({validateMoveClicked:!0})}),setTimeout(function(){return t.setState({showDimmer:!1})},100),console.log(\"nextProps.validateMoveResult\",e.validateMoveResult)):\"FAILED\"!==this.props.VALIDATE_MOVE_RESULT_STATUS&&\"FAILED\"===e.VALIDATE_MOVE_RESULT_STATUS&&(this.setState({validateMoveResult:e.validateMoveResult},function(){t.setState({validateMoveClicked:!0})}),setTimeout(function(){return t.setState({showDimmer:!1})},100)),\"SUCCESS\"!==this.props.INITIAL_MAP_STATUS&&\"SUCCESS\"===e.INITIAL_MAP_STATUS)this.setState({showDimmer:!1,defaultNodes:JSON.parse(e.initialMap.nodes),defaultEdges:JSON.parse(e.initialMap.edges)});else if(\"FAILED\"!==this.props.INITIAL_MAP_STATUS&&\"FAILED\"===e.INITIAL_MAP_STATUS){a=\"Unable to connect to Server!! Kindly try again after some time.\";this.setState({status:\"Show\",messageColor:\"red\",message:a,showDimmer:!1})}if(\"SUCCESS\"!==this.props.SAVE_MAP_STATUS&&\"SUCCESS\"===e.SAVE_MAP_STATUS){a=\"Saved Succesfully !\";this.setState({status:\"Show\",messageColor:\"blue\",message:a,showDimmer:!1})}else if(\"FAILED\"!==this.props.SAVE_MAP_STATUS&&\"FAILED\"===e.SAVE_MAP_STATUS){a=\"Unable to connect to Server!! Kindly try again after some time.\";this.setState({status:\"Show\",messageColor:\"red\",message:a,showDimmer:!1})}if(\"SUCCESS\"!==this.props.HINT_MOVE_STATUS&&\"SUCCESS\"===e.HINT_MOVE_STATUS)this.setState({status:\"Show\",messageColor:\"blue\",message:e.hintMessage,hintMessage:e.hintMessage}),setTimeout(function(){return t.setState({showDimmer:!1})},100);else if(\"FAILED\"!==this.props.HINT_MOVE_STATUS&&\"FAILED\"===e.HINT_MOVE_STATUS){a=\"Unable to connect to Server!! Kindly try again after some time.\";this.setState({status:\"Show\",messageColor:\"red\",message:a}),setTimeout(function(){return t.setState({showDimmer:!1})},100)}}},{key:\"render\",value:function(){var e=this,t=this.state,a=t.initialNode,n=t.removeNode,o=t.gameType,i=t.gameNode,l=t.gameTreeList,r=t.defaultNodes,d=t.defaultEdges,c=t.resetMapClicked,m=t.gameStartDisabled,u=t.validateMoveClicked,S=t.validateMoveResult,g=t.proponentWinCount,p=t.opponentWinCount,E=t.lastAddedNode,T=t.showDimmer,A=t.gameStart,M=t.saveDisabled,b=t.resetMapDisabled,h=t.playGameDisabled,v=t.gameTypeDisabled,_=t.resultDisabled,D=t.removeDisabled,f=t.messageColor,N=t.isGameStartChecked,L=t.addGameNodeDisabled,C=t.validateDisabled,I=t.resetGameDisabled,U=t.hintDisabled,y=t.addMapNodeDisabled,O=t.status,G=t.message;return s.a.createElement(s.a.Fragment,null,s.a.createElement(se.a,{active:T,page:!0},s.a.createElement(oe.a,{as:\"h4\",icon:!0,inverted:!0},s.a.createElement(ne.a,{name:\"spinner\",loading:!0}),\"Please wait, we are processing your request..\")),s.a.createElement(\"div\",{class:\"split left\"},s.a.createElement(ie.a,{placeholder:\"Node\",name:\"removeNode\",value:n,type:\"Number\",onChange:this.handleChange,style:{width:80,marginTop:-10,marginLeft:155}}),s.a.createElement(me.a,null,s.a.createElement(Oe,{saveMap:this.saveMap,saveDisabled:M}),s.a.createElement(Ge,{defaultNodes:r,defaultEdges:d,resetMapDisabled:b,resetMap:this.resetMap}),s.a.createElement(we,{removeNode:n,removeDisabled:D}),s.a.createElement(Pe,{playGameFunction:this.playGameFunction,playGameDisabled:h}),s.a.createElement(ye,{defaultNodes:r,defaultEdges:d,addMapNodeDisabled:y}))),s.a.createElement(\"div\",{class:\"split right\"},s.a.createElement(ie.a,{placeholder:\"Node\",name:\"gameNode\",value:i,type:\"Number\",onChange:this.handleChange,style:{width:80,marginTop:-10,marginLeft:205}}),s.a.createElement(le.a,{placeholder:\"Game Type\",name:\"gameType\",value:o,options:[{key:\"Preferred\",text:\"Preferred\",value:\"Preferred\"},{key:\"Grounded\",text:\"Grounded\",value:\"Grounded\"}],onChange:this.handleChange,selection:!0,style:{width:60,marginTop:-10,marginLeft:-280},disabled:v}),s.a.createElement(\"button\",{onClick:this.showResult,className:\"btn-add9\",disabled:_},\"Result\"),s.a.createElement(\"div\",{class:\"checkboxComputer\"},s.a.createElement(re.a,{onClick:this.handleChangeCheckBox,name:\"gameStart\",checked:N,disabled:m}),s.a.createElement(\"label\",{className:\"labelStyle\"},\"Opponent Starts\")),s.a.createElement(me.a,null,s.a.createElement(ke,null),s.a.createElement(Fe,{value:i,addbutton:this.addbutton,addGameNodeDisabled:L}),s.a.createElement(Ve,{resetGame:this.resetGame,resetGameDisabled:I,resetMapClicked:c}),s.a.createElement(Re,{hint:this.hint,initialNode:a,gameTreeList:l,hintDisabled:U,gameStart:A}),s.a.createElement(je,{initialNode:a,gameTreeList:l,validateMove:this.validateMove,gameStart:A,validateMoveClicked:u,validateMoveResult:S,lastAddedNode:E,validationFinished:this.validationFinished,proponentWinCount:g,opponentWinCount:p,validateDisabled:C}))),s.a.createElement(\"div\",null,\"Show\"===O&&s.a.createElement(\"div\",{class:\"messageDisplayed\"},s.a.createElement(de.a,{color:f,size:\"big\",compact:!0,style:{maxWidth:800,minWidth:800},onDismiss:function(){return e.setState({status:\"Hide\"})}},s.a.createElement(de.a.Header,null,G)))))}}]),t}(n.Component),He={getGameMap:function(e,t){return function(a){a({type:\"GAME_MAP\",payload:ve(e,t)})}},getGameList:function(e,t,a,n){return function(s){s({type:\"GAME_LIST\",payload:_e(e,t,a,n)})}},validateMove:function(e,t,a,n,s,o,i,l){return function(r){r({type:\"VALIDATE_MOVE_RESULT\",payload:De(e,t,a,n,s,o,i,l)})}},getInitialMap:function(){return function(e){e({type:\"INITIAL_MAP\",payload:pe.a.get(Me)})}},saveMap:function(e,t){return function(a){a({type:\"SAVE_MAP\",payload:fe(e,t)})}},hintMove:function(e,t,a,n,s){return function(o){o({type:\"HINT_MOVE\",payload:Ne(e,t,a,n,s)})}}},xe=Object(l.b)(function(e){return{GAME_MAP_STATUS:e.user.meta.GAME_MAP_STATUS,GAME_LIST_STATUS:e.user.meta.GAME_LIST_STATUS,VALIDATE_MOVE_RESULT_STATUS:e.user.meta.VALIDATE_MOVE_RESULT_STATUS,INITIAL_MAP_STATUS:e.user.meta.INITIAL_MAP_STATUS,SAVE_MAP_STATUS:e.user.meta.SAVE_MAP_STATUS,HINT_MOVE_STATUS:e.user.meta.HINT_MOVE_STATUS,sessionId:e.user.data.sessionId,gameTreeMap:e.user.data.gameTreeMap,gameTreeList:e.user.data.gameTreeList,validateMoveResult:e.user.data.validateMoveResult,saveMapResult:e.user.data.saveMapResult,initialMap:e.user.data.initialMap,hintMessage:e.user.data.hintMessage}},He)(We),Je=s.a.createElement(m.a,{history:H},s.a.createElement(\"div\",{style:{minHeight:600,height:\"100vh\"}},s.a.createElement(Q.a,{exact:!0,path:\"/\",component:xe}))),Be=(a(476),a(477),a(259)),Ke=s.a.createElement(l.a,{store:z},s.a.createElement(Be.a,{loading:null,persistor:q},Je));i.a.render(Ke,document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");r?(function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):d(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ\")})):d(e)})}}()}},[[286,1,2]]]);","extractedComments":[]}